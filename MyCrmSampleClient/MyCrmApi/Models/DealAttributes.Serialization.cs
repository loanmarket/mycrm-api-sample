// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    public partial class DealAttributes : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Dates))
            {
                writer.WritePropertyName("dates");
                writer.WriteObjectValue(Dates);
            }
            if (Optional.IsDefined(DealType))
            {
                writer.WritePropertyName("dealType");
                writer.WriteStringValue(DealType.Value.ToString());
            }
            if (Optional.IsDefined(Name))
            {
                if (Name != null)
                {
                    writer.WritePropertyName("name");
                    writer.WriteStringValue(Name);
                }
                else
                {
                    writer.WriteNull("name");
                }
            }
            if (Optional.IsDefined(Opportunity))
            {
                writer.WritePropertyName("opportunity");
                writer.WriteObjectValue(Opportunity);
            }
            writer.WriteEndObject();
        }

        internal static DealAttributes DeserializeDealAttributes(JsonElement element)
        {
            Optional<DateTimeOffset?> updated = default;
            Optional<DateTimeOffset?> created = default;
            Optional<ImportantDatesSet> dates = default;
            Optional<double?> totalLoanAmount = default;
            Optional<string> customStatusName = default;
            Optional<DealAttributesDealType> dealType = default;
            Optional<string> name = default;
            Optional<DealAttributesDealStatus> dealStatus = default;
            Optional<Opportunity> opportunity = default;
            Optional<IReadOnlyList<Split>> splits = default;
            Optional<string> lenderName = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("updated"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        updated = null;
                        continue;
                    }
                    updated = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("created"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        created = null;
                        continue;
                    }
                    created = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("dates"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dates = ImportantDatesSet.DeserializeImportantDatesSet(property.Value);
                    continue;
                }
                if (property.NameEquals("totalLoanAmount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        totalLoanAmount = null;
                        continue;
                    }
                    totalLoanAmount = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("customStatusName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        customStatusName = null;
                        continue;
                    }
                    customStatusName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dealType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dealType = new DealAttributesDealType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        name = null;
                        continue;
                    }
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dealStatus"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dealStatus = new DealAttributesDealStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("opportunity"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    opportunity = Opportunity.DeserializeOpportunity(property.Value);
                    continue;
                }
                if (property.NameEquals("splits"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        splits = null;
                        continue;
                    }
                    List<Split> array = new List<Split>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Split.DeserializeSplit(item));
                    }
                    splits = array;
                    continue;
                }
                if (property.NameEquals("lenderName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lenderName = null;
                        continue;
                    }
                    lenderName = property.Value.GetString();
                    continue;
                }
            }
            return new DealAttributes(Optional.ToNullable(updated), Optional.ToNullable(created), dates.Value, Optional.ToNullable(totalLoanAmount), customStatusName.Value, Optional.ToNullable(dealType), name.Value, Optional.ToNullable(dealStatus), opportunity.Value, Optional.ToList(splits), lenderName.Value);
        }
    }
}
