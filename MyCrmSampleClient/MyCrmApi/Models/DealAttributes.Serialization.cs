// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    public partial class DealAttributes : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DealTypeId))
            {
                if (DealTypeId != null)
                {
                    writer.WritePropertyName("dealTypeId");
                    writer.WriteNumberValue(DealTypeId.Value);
                }
                else
                {
                    writer.WriteNull("dealTypeId");
                }
            }
            if (Optional.IsDefined(Name))
            {
                if (Name != null)
                {
                    writer.WritePropertyName("name");
                    writer.WriteStringValue(Name);
                }
                else
                {
                    writer.WriteNull("name");
                }
            }
            writer.WriteEndObject();
        }

        internal static DealAttributes DeserializeDealAttributes(JsonElement element)
        {
            Optional<DateTimeOffset?> created = default;
            Optional<int?> adviserContactGroupId = default;
            Optional<DateTimeOffset?> updated = default;
            Optional<int?> dealTypeId = default;
            Optional<string> customStatusName = default;
            Optional<string> name = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("created"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        created = null;
                        continue;
                    }
                    created = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("adviserContactGroupId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        adviserContactGroupId = null;
                        continue;
                    }
                    adviserContactGroupId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("updated"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        updated = null;
                        continue;
                    }
                    updated = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("dealTypeId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        dealTypeId = null;
                        continue;
                    }
                    dealTypeId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("customStatusName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        customStatusName = null;
                        continue;
                    }
                    customStatusName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        name = null;
                        continue;
                    }
                    name = property.Value.GetString();
                    continue;
                }
            }
            return new DealAttributes(Optional.ToNullable(created), Optional.ToNullable(adviserContactGroupId), Optional.ToNullable(updated), Optional.ToNullable(dealTypeId), customStatusName.Value, name.Value);
        }
    }
}
