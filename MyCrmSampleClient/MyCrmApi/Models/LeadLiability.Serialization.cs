// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    public partial class LeadLiability : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Lid))
            {
                if (Lid != null)
                {
                    writer.WritePropertyName("lid");
                    writer.WriteStringValue(Lid);
                }
                else
                {
                    writer.WriteNull("lid");
                }
            }
            if (Optional.IsDefined(LiabilityTypeId))
            {
                if (LiabilityTypeId != null)
                {
                    writer.WritePropertyName("liabilityTypeId");
                    writer.WriteNumberValue(LiabilityTypeId.Value);
                }
                else
                {
                    writer.WriteNull("liabilityTypeId");
                }
            }
            if (Optional.IsDefined(LiabilitySubTypeId))
            {
                if (LiabilitySubTypeId != null)
                {
                    writer.WritePropertyName("liabilitySubTypeId");
                    writer.WriteNumberValue(LiabilitySubTypeId.Value);
                }
                else
                {
                    writer.WriteNull("liabilitySubTypeId");
                }
            }
            if (Optional.IsDefined(Description))
            {
                if (Description != null)
                {
                    writer.WritePropertyName("description");
                    writer.WriteStringValue(Description);
                }
                else
                {
                    writer.WriteNull("description");
                }
            }
            if (Optional.IsDefined(AccountName))
            {
                if (AccountName != null)
                {
                    writer.WritePropertyName("accountName");
                    writer.WriteStringValue(AccountName);
                }
                else
                {
                    writer.WriteNull("accountName");
                }
            }
            if (Optional.IsDefined(Bsb))
            {
                if (Bsb != null)
                {
                    writer.WritePropertyName("bsb");
                    writer.WriteStringValue(Bsb);
                }
                else
                {
                    writer.WriteNull("bsb");
                }
            }
            if (Optional.IsDefined(AccountNumber))
            {
                if (AccountNumber != null)
                {
                    writer.WritePropertyName("accountNumber");
                    writer.WriteStringValue(AccountNumber);
                }
                else
                {
                    writer.WriteNull("accountNumber");
                }
            }
            if (Optional.IsDefined(Value))
            {
                if (Value != null)
                {
                    writer.WritePropertyName("value");
                    writer.WriteNumberValue(Value.Value);
                }
                else
                {
                    writer.WriteNull("value");
                }
            }
            if (Optional.IsDefined(Limit))
            {
                if (Limit != null)
                {
                    writer.WritePropertyName("limit");
                    writer.WriteNumberValue(Limit.Value);
                }
                else
                {
                    writer.WriteNull("limit");
                }
            }
            if (Optional.IsDefined(Repayments))
            {
                if (Repayments != null)
                {
                    writer.WritePropertyName("repayments");
                    writer.WriteNumberValue(Repayments.Value);
                }
                else
                {
                    writer.WriteNull("repayments");
                }
            }
            if (Optional.IsDefined(RepaymentFrequency))
            {
                writer.WritePropertyName("repaymentFrequency");
                writer.WriteStringValue(RepaymentFrequency.Value.ToString());
            }
            if (Optional.IsDefined(InterestRate))
            {
                if (InterestRate != null)
                {
                    writer.WritePropertyName("interestRate");
                    writer.WriteNumberValue(InterestRate.Value);
                }
                else
                {
                    writer.WriteNull("interestRate");
                }
            }
            if (Optional.IsDefined(InterestTaxDeductible))
            {
                if (InterestTaxDeductible != null)
                {
                    writer.WritePropertyName("interestTaxDeductible");
                    writer.WriteBooleanValue(InterestTaxDeductible.Value);
                }
                else
                {
                    writer.WriteNull("interestTaxDeductible");
                }
            }
            if (Optional.IsDefined(CreditorName))
            {
                if (CreditorName != null)
                {
                    writer.WritePropertyName("creditorName");
                    writer.WriteStringValue(CreditorName);
                }
                else
                {
                    writer.WriteNull("creditorName");
                }
            }
            if (Optional.IsDefined(LoanTerm))
            {
                if (LoanTerm != null)
                {
                    writer.WritePropertyName("loanTerm");
                    writer.WriteNumberValue(LoanTerm.Value);
                }
                else
                {
                    writer.WriteNull("loanTerm");
                }
            }
            if (Optional.IsDefined(LoanRepaymentType))
            {
                writer.WritePropertyName("loanRepaymentType");
                writer.WriteStringValue(LoanRepaymentType.Value.ToString());
            }
            if (Optional.IsDefined(MortgagePriority))
            {
                writer.WritePropertyName("mortgagePriority");
                writer.WriteStringValue(MortgagePriority.Value.ToString());
            }
            if (Optional.IsDefined(Asset))
            {
                writer.WritePropertyName("asset");
                writer.WriteObjectValue(Asset);
            }
            if (Optional.IsCollectionDefined(Ownership))
            {
                if (Ownership != null)
                {
                    writer.WritePropertyName("ownership");
                    writer.WriteStartArray();
                    foreach (var item in Ownership)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("ownership");
                }
            }
            writer.WriteEndObject();
        }

        internal static LeadLiability DeserializeLeadLiability(JsonElement element)
        {
            Optional<string> lid = default;
            Optional<int?> liabilityTypeId = default;
            Optional<int?> liabilitySubTypeId = default;
            Optional<string> description = default;
            Optional<string> accountName = default;
            Optional<string> bsb = default;
            Optional<string> accountNumber = default;
            Optional<double?> value = default;
            Optional<double?> limit = default;
            Optional<double?> repayments = default;
            Optional<Frequency> repaymentFrequency = default;
            Optional<double?> interestRate = default;
            Optional<bool?> interestTaxDeductible = default;
            Optional<string> creditorName = default;
            Optional<int?> loanTerm = default;
            Optional<LiabilityRepaymentType> loanRepaymentType = default;
            Optional<MortgagePriority> mortgagePriority = default;
            Optional<LeadAssetReference> asset = default;
            Optional<IList<LeadContactReference>> ownership = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("lid"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lid = null;
                        continue;
                    }
                    lid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("liabilityTypeId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        liabilityTypeId = null;
                        continue;
                    }
                    liabilityTypeId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("liabilitySubTypeId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        liabilitySubTypeId = null;
                        continue;
                    }
                    liabilitySubTypeId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        description = null;
                        continue;
                    }
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("accountName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        accountName = null;
                        continue;
                    }
                    accountName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("bsb"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        bsb = null;
                        continue;
                    }
                    bsb = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("accountNumber"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        accountNumber = null;
                        continue;
                    }
                    accountNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("value"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        value = null;
                        continue;
                    }
                    value = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("limit"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        limit = null;
                        continue;
                    }
                    limit = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("repayments"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        repayments = null;
                        continue;
                    }
                    repayments = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("repaymentFrequency"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    repaymentFrequency = new Frequency(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("interestRate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        interestRate = null;
                        continue;
                    }
                    interestRate = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("interestTaxDeductible"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        interestTaxDeductible = null;
                        continue;
                    }
                    interestTaxDeductible = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("creditorName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        creditorName = null;
                        continue;
                    }
                    creditorName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("loanTerm"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        loanTerm = null;
                        continue;
                    }
                    loanTerm = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("loanRepaymentType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    loanRepaymentType = new LiabilityRepaymentType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("mortgagePriority"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    mortgagePriority = new MortgagePriority(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("asset"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    asset = LeadAssetReference.DeserializeLeadAssetReference(property.Value);
                    continue;
                }
                if (property.NameEquals("ownership"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        ownership = null;
                        continue;
                    }
                    List<LeadContactReference> array = new List<LeadContactReference>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(LeadContactReference.DeserializeLeadContactReference(item));
                    }
                    ownership = array;
                    continue;
                }
            }
            return new LeadLiability(lid.Value, Optional.ToNullable(liabilityTypeId), Optional.ToNullable(liabilitySubTypeId), description.Value, accountName.Value, bsb.Value, accountNumber.Value, Optional.ToNullable(value), Optional.ToNullable(limit), Optional.ToNullable(repayments), Optional.ToNullable(repaymentFrequency), Optional.ToNullable(interestRate), Optional.ToNullable(interestTaxDeductible), creditorName.Value, Optional.ToNullable(loanTerm), Optional.ToNullable(loanRepaymentType), Optional.ToNullable(mortgagePriority), asset.Value, Optional.ToList(ownership));
        }
    }
}
