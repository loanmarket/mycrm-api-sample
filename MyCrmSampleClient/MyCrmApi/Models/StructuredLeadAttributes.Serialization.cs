// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    public partial class StructuredLeadAttributes : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsCollectionDefined(Contacts))
            {
                if (Contacts != null)
                {
                    writer.WritePropertyName("contacts");
                    writer.WriteStartArray();
                    foreach (var item in Contacts)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("contacts");
                }
            }
            if (Optional.IsCollectionDefined(Addresses))
            {
                if (Addresses != null)
                {
                    writer.WritePropertyName("addresses");
                    writer.WriteStartArray();
                    foreach (var item in Addresses)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("addresses");
                }
            }
            if (Optional.IsCollectionDefined(Assets))
            {
                if (Assets != null)
                {
                    writer.WritePropertyName("assets");
                    writer.WriteStartArray();
                    foreach (var item in Assets)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("assets");
                }
            }
            if (Optional.IsCollectionDefined(Expenses))
            {
                if (Expenses != null)
                {
                    writer.WritePropertyName("expenses");
                    writer.WriteStartArray();
                    foreach (var item in Expenses)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("expenses");
                }
            }
            if (Optional.IsCollectionDefined(Incomes))
            {
                if (Incomes != null)
                {
                    writer.WritePropertyName("incomes");
                    writer.WriteStartArray();
                    foreach (var item in Incomes)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("incomes");
                }
            }
            if (Optional.IsCollectionDefined(Liabilities))
            {
                if (Liabilities != null)
                {
                    writer.WritePropertyName("liabilities");
                    writer.WriteStartArray();
                    foreach (var item in Liabilities)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("liabilities");
                }
            }
            if (Optional.IsCollectionDefined(Employments))
            {
                if (Employments != null)
                {
                    writer.WritePropertyName("employments");
                    writer.WriteStartArray();
                    foreach (var item in Employments)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("employments");
                }
            }
            if (Optional.IsDefined(UtmSource))
            {
                if (UtmSource != null)
                {
                    writer.WritePropertyName("utmSource");
                    writer.WriteStringValue(UtmSource);
                }
                else
                {
                    writer.WriteNull("utmSource");
                }
            }
            if (Optional.IsDefined(UtmMedium))
            {
                if (UtmMedium != null)
                {
                    writer.WritePropertyName("utmMedium");
                    writer.WriteStringValue(UtmMedium);
                }
                else
                {
                    writer.WriteNull("utmMedium");
                }
            }
            if (Optional.IsDefined(UtmCampaign))
            {
                if (UtmCampaign != null)
                {
                    writer.WritePropertyName("utmCampaign");
                    writer.WriteStringValue(UtmCampaign);
                }
                else
                {
                    writer.WriteNull("utmCampaign");
                }
            }
            if (Optional.IsDefined(UtmTerm))
            {
                if (UtmTerm != null)
                {
                    writer.WritePropertyName("utmTerm");
                    writer.WriteStringValue(UtmTerm);
                }
                else
                {
                    writer.WriteNull("utmTerm");
                }
            }
            if (Optional.IsDefined(UtmContent))
            {
                if (UtmContent != null)
                {
                    writer.WritePropertyName("utmContent");
                    writer.WriteStringValue(UtmContent);
                }
                else
                {
                    writer.WriteNull("utmContent");
                }
            }
            if (Optional.IsDefined(SourceId))
            {
                if (SourceId != null)
                {
                    writer.WritePropertyName("sourceId");
                    writer.WriteNumberValue(SourceId.Value);
                }
                else
                {
                    writer.WriteNull("sourceId");
                }
            }
            if (Optional.IsDefined(SourceCategoryId))
            {
                if (SourceCategoryId != null)
                {
                    writer.WritePropertyName("sourceCategoryId");
                    writer.WriteNumberValue(SourceCategoryId.Value);
                }
                else
                {
                    writer.WriteNull("sourceCategoryId");
                }
            }
            if (Optional.IsDefined(SourceReferrerId))
            {
                if (SourceReferrerId != null)
                {
                    writer.WritePropertyName("sourceReferrerId");
                    writer.WriteStringValue(SourceReferrerId);
                }
                else
                {
                    writer.WriteNull("sourceReferrerId");
                }
            }
            if (Optional.IsDefined(SourceAdditionalDetails))
            {
                if (SourceAdditionalDetails != null)
                {
                    writer.WritePropertyName("sourceAdditionalDetails");
                    writer.WriteStringValue(SourceAdditionalDetails);
                }
                else
                {
                    writer.WriteNull("sourceAdditionalDetails");
                }
            }
            if (Optional.IsDefined(SourceSystemUrl))
            {
                if (SourceSystemUrl != null)
                {
                    writer.WritePropertyName("sourceSystemUrl");
                    writer.WriteStringValue(SourceSystemUrl);
                }
                else
                {
                    writer.WriteNull("sourceSystemUrl");
                }
            }
            if (Optional.IsDefined(DealName))
            {
                if (DealName != null)
                {
                    writer.WritePropertyName("dealName");
                    writer.WriteStringValue(DealName);
                }
                else
                {
                    writer.WriteNull("dealName");
                }
            }
            if (Optional.IsDefined(NoteTitle))
            {
                if (NoteTitle != null)
                {
                    writer.WritePropertyName("noteTitle");
                    writer.WriteStringValue(NoteTitle);
                }
                else
                {
                    writer.WriteNull("noteTitle");
                }
            }
            if (Optional.IsDefined(NoteDetails))
            {
                if (NoteDetails != null)
                {
                    writer.WritePropertyName("noteDetails");
                    writer.WriteStringValue(NoteDetails);
                }
                else
                {
                    writer.WriteNull("noteDetails");
                }
            }
            if (Optional.IsDefined(ExternalReference))
            {
                if (ExternalReference != null)
                {
                    writer.WritePropertyName("externalReference");
                    writer.WriteStringValue(ExternalReference);
                }
                else
                {
                    writer.WriteNull("externalReference");
                }
            }
            if (Optional.IsDefined(ExternalIntegration))
            {
                if (ExternalIntegration != null)
                {
                    writer.WritePropertyName("externalIntegration");
                    writer.WriteStringValue(ExternalIntegration);
                }
                else
                {
                    writer.WriteNull("externalIntegration");
                }
            }
            if (Optional.IsDefined(ExternalIntegrationAllowCreate))
            {
                writer.WritePropertyName("externalIntegrationAllowCreate");
                writer.WriteBooleanValue(ExternalIntegrationAllowCreate.Value);
            }
            if (Optional.IsDefined(SendNotification))
            {
                writer.WritePropertyName("sendNotification");
                writer.WriteBooleanValue(SendNotification.Value);
            }
            writer.WriteEndObject();
        }

        internal static StructuredLeadAttributes DeserializeStructuredLeadAttributes(JsonElement element)
        {
            Optional<IList<LeadContact>> contacts = default;
            Optional<IList<LeadAddress>> addresses = default;
            Optional<IList<LeadAsset>> assets = default;
            Optional<IList<LeadExpense>> expenses = default;
            Optional<IList<LeadIncome>> incomes = default;
            Optional<IList<LeadLiability>> liabilities = default;
            Optional<IList<LeadEmployment>> employments = default;
            Optional<string> utmSource = default;
            Optional<string> utmMedium = default;
            Optional<string> utmCampaign = default;
            Optional<string> utmTerm = default;
            Optional<string> utmContent = default;
            Optional<int?> sourceId = default;
            Optional<int?> sourceCategoryId = default;
            Optional<string> sourceReferrerId = default;
            Optional<string> sourceAdditionalDetails = default;
            Optional<string> sourceSystemUrl = default;
            Optional<string> dealName = default;
            Optional<string> noteTitle = default;
            Optional<string> noteDetails = default;
            Optional<string> externalReference = default;
            Optional<string> externalIntegration = default;
            Optional<bool> externalIntegrationAllowCreate = default;
            Optional<bool> sendNotification = default;
            Optional<string> customStatusName = default;
            Optional<StructuredLeadAttributesDealStatus> dealStatus = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("contacts"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        contacts = null;
                        continue;
                    }
                    List<LeadContact> array = new List<LeadContact>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(LeadContact.DeserializeLeadContact(item));
                    }
                    contacts = array;
                    continue;
                }
                if (property.NameEquals("addresses"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        addresses = null;
                        continue;
                    }
                    List<LeadAddress> array = new List<LeadAddress>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(LeadAddress.DeserializeLeadAddress(item));
                    }
                    addresses = array;
                    continue;
                }
                if (property.NameEquals("assets"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        assets = null;
                        continue;
                    }
                    List<LeadAsset> array = new List<LeadAsset>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(LeadAsset.DeserializeLeadAsset(item));
                    }
                    assets = array;
                    continue;
                }
                if (property.NameEquals("expenses"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        expenses = null;
                        continue;
                    }
                    List<LeadExpense> array = new List<LeadExpense>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(LeadExpense.DeserializeLeadExpense(item));
                    }
                    expenses = array;
                    continue;
                }
                if (property.NameEquals("incomes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        incomes = null;
                        continue;
                    }
                    List<LeadIncome> array = new List<LeadIncome>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(LeadIncome.DeserializeLeadIncome(item));
                    }
                    incomes = array;
                    continue;
                }
                if (property.NameEquals("liabilities"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        liabilities = null;
                        continue;
                    }
                    List<LeadLiability> array = new List<LeadLiability>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(LeadLiability.DeserializeLeadLiability(item));
                    }
                    liabilities = array;
                    continue;
                }
                if (property.NameEquals("employments"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        employments = null;
                        continue;
                    }
                    List<LeadEmployment> array = new List<LeadEmployment>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(LeadEmployment.DeserializeLeadEmployment(item));
                    }
                    employments = array;
                    continue;
                }
                if (property.NameEquals("utmSource"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        utmSource = null;
                        continue;
                    }
                    utmSource = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("utmMedium"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        utmMedium = null;
                        continue;
                    }
                    utmMedium = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("utmCampaign"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        utmCampaign = null;
                        continue;
                    }
                    utmCampaign = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("utmTerm"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        utmTerm = null;
                        continue;
                    }
                    utmTerm = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("utmContent"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        utmContent = null;
                        continue;
                    }
                    utmContent = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourceId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        sourceId = null;
                        continue;
                    }
                    sourceId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("sourceCategoryId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        sourceCategoryId = null;
                        continue;
                    }
                    sourceCategoryId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("sourceReferrerId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        sourceReferrerId = null;
                        continue;
                    }
                    sourceReferrerId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourceAdditionalDetails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        sourceAdditionalDetails = null;
                        continue;
                    }
                    sourceAdditionalDetails = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourceSystemUrl"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        sourceSystemUrl = null;
                        continue;
                    }
                    sourceSystemUrl = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dealName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        dealName = null;
                        continue;
                    }
                    dealName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("noteTitle"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        noteTitle = null;
                        continue;
                    }
                    noteTitle = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("noteDetails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        noteDetails = null;
                        continue;
                    }
                    noteDetails = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("externalReference"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        externalReference = null;
                        continue;
                    }
                    externalReference = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("externalIntegration"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        externalIntegration = null;
                        continue;
                    }
                    externalIntegration = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("externalIntegrationAllowCreate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    externalIntegrationAllowCreate = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("sendNotification"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    sendNotification = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("customStatusName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        customStatusName = null;
                        continue;
                    }
                    customStatusName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dealStatus"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    dealStatus = new StructuredLeadAttributesDealStatus(property.Value.GetString());
                    continue;
                }
            }
            return new StructuredLeadAttributes(Optional.ToList(contacts), Optional.ToList(addresses), Optional.ToList(assets), Optional.ToList(expenses), Optional.ToList(incomes), Optional.ToList(liabilities), Optional.ToList(employments), utmSource.Value, utmMedium.Value, utmCampaign.Value, utmTerm.Value, utmContent.Value, Optional.ToNullable(sourceId), Optional.ToNullable(sourceCategoryId), sourceReferrerId.Value, sourceAdditionalDetails.Value, sourceSystemUrl.Value, dealName.Value, noteTitle.Value, noteDetails.Value, externalReference.Value, externalIntegration.Value, Optional.ToNullable(externalIntegrationAllowCreate), Optional.ToNullable(sendNotification), customStatusName.Value, Optional.ToNullable(dealStatus));
        }
    }
}
