// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    public partial class ContactGroupRelationships : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Businesses))
            {
                writer.WritePropertyName("businesses");
                writer.WriteObjectValue(Businesses);
            }
            if (Optional.IsDefined(Contacts))
            {
                writer.WritePropertyName("contacts");
                writer.WriteObjectValue(Contacts);
            }
            if (Optional.IsDefined(Adviser))
            {
                writer.WritePropertyName("adviser");
                writer.WriteObjectValue(Adviser);
            }
            if (Optional.IsDefined(ReferrerOrganisation))
            {
                writer.WritePropertyName("referrerOrganisation");
                writer.WriteObjectValue(ReferrerOrganisation);
            }
            if (Optional.IsDefined(Referrer))
            {
                writer.WritePropertyName("referrer");
                writer.WriteObjectValue(Referrer);
            }
            writer.WriteEndObject();
        }

        internal static ContactGroupRelationships DeserializeContactGroupRelationships(JsonElement element)
        {
            Optional<RelationshipsMultipleDocument> businesses = default;
            Optional<RelationshipsMultipleDocument> contacts = default;
            Optional<RelationshipsSingleDocument> adviser = default;
            Optional<ContactGroupRelationshipsReferrerOrganisation> referrerOrganisation = default;
            Optional<ContactGroupRelationshipsReferrer> referrer = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("businesses"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    businesses = RelationshipsMultipleDocument.DeserializeRelationshipsMultipleDocument(property.Value);
                    continue;
                }
                if (property.NameEquals("contacts"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    contacts = RelationshipsMultipleDocument.DeserializeRelationshipsMultipleDocument(property.Value);
                    continue;
                }
                if (property.NameEquals("adviser"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    adviser = RelationshipsSingleDocument.DeserializeRelationshipsSingleDocument(property.Value);
                    continue;
                }
                if (property.NameEquals("referrerOrganisation"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    referrerOrganisation = ContactGroupRelationshipsReferrerOrganisation.DeserializeContactGroupRelationshipsReferrerOrganisation(property.Value);
                    continue;
                }
                if (property.NameEquals("referrer"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    referrer = ContactGroupRelationshipsReferrer.DeserializeContactGroupRelationshipsReferrer(property.Value);
                    continue;
                }
            }
            return new ContactGroupRelationships(businesses.Value, contacts.Value, adviser.Value, referrerOrganisation.Value, referrer.Value);
        }
    }
}
