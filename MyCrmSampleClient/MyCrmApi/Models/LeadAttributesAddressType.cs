// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    /// <summary> The LeadAttributesAddressType. </summary>
    public readonly partial struct LeadAttributesAddressType : IEquatable<LeadAttributesAddressType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="LeadAttributesAddressType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public LeadAttributesAddressType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string CurrentValue = "Current";
        private const string PostalValue = "Postal";
        private const string PostSettlementValue = "PostSettlement";
        private const string PreviousValue = "Previous";
        private const string OtherValue = "Other";

        /// <summary> Current. </summary>
        public static LeadAttributesAddressType Current { get; } = new LeadAttributesAddressType(CurrentValue);
        /// <summary> Postal. </summary>
        public static LeadAttributesAddressType Postal { get; } = new LeadAttributesAddressType(PostalValue);
        /// <summary> PostSettlement. </summary>
        public static LeadAttributesAddressType PostSettlement { get; } = new LeadAttributesAddressType(PostSettlementValue);
        /// <summary> Previous. </summary>
        public static LeadAttributesAddressType Previous { get; } = new LeadAttributesAddressType(PreviousValue);
        /// <summary> Other. </summary>
        public static LeadAttributesAddressType Other { get; } = new LeadAttributesAddressType(OtherValue);
        /// <summary> Determines if two <see cref="LeadAttributesAddressType"/> values are the same. </summary>
        public static bool operator ==(LeadAttributesAddressType left, LeadAttributesAddressType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="LeadAttributesAddressType"/> values are not the same. </summary>
        public static bool operator !=(LeadAttributesAddressType left, LeadAttributesAddressType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="LeadAttributesAddressType"/>. </summary>
        public static implicit operator LeadAttributesAddressType(string value) => new LeadAttributesAddressType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is LeadAttributesAddressType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(LeadAttributesAddressType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
