// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    /// <summary> The Point. </summary>
    internal partial class Point
    {
        /// <summary> Initializes a new instance of Point. </summary>
        internal Point()
        {
            Coordinates = new ChangeTrackingList<Coordinate>();
        }

        /// <summary> Gets the factory. </summary>
        public GeometryFactory Factory { get; }
        /// <summary> Anything. </summary>
        public object UserData { get; }
        /// <summary> Gets the srid. </summary>
        public int? Srid { get; }
        /// <summary> Gets the precision model. </summary>
        public PrecisionModel PrecisionModel { get; }
        /// <summary> Gets the num geometries. </summary>
        public int? NumGeometries { get; }
        /// <summary> Gets the is simple. </summary>
        public bool? IsSimple { get; }
        /// <summary> Gets the is valid. </summary>
        public bool? IsValid { get; }
        /// <summary> Gets the area. </summary>
        public double? Area { get; }
        /// <summary> Gets the length. </summary>
        public double? Length { get; }
        /// <summary> Gets the centroid. </summary>
        public Point Centroid { get; }
        /// <summary> Gets the interior point. </summary>
        public Point InteriorPoint { get; }
        /// <summary> Gets the point on surface. </summary>
        public Point PointOnSurface { get; }
        /// <summary> Gets the envelope. </summary>
        public Geometry Envelope { get; }
        /// <summary> Gets the envelope internal. </summary>
        public Envelope EnvelopeInternal { get; }
        /// <summary> Gets the is rectangle. </summary>
        public bool? IsRectangle { get; }
        /// <summary> Gets the coordinate sequence. </summary>
        public CoordinateSequence CoordinateSequence { get; }
        /// <summary> Gets the coordinates. </summary>
        public IReadOnlyList<Coordinate> Coordinates { get; }
        /// <summary> Gets the num points. </summary>
        public int? NumPoints { get; }
        /// <summary> Gets the is empty. </summary>
        public bool? IsEmpty { get; }
        /// <summary> Gets the dimension. </summary>
        public Dimension? Dimension { get; }
        /// <summary> Gets the boundary dimension. </summary>
        public Dimension? BoundaryDimension { get; }
        /// <summary> Gets the x. </summary>
        public double? X { get; }
        /// <summary> Gets the y. </summary>
        public double? Y { get; }
        /// <summary> Gets the coordinate. </summary>
        public Coordinate Coordinate { get; }
        /// <summary> Gets the geometry type. </summary>
        public string GeometryType { get; }
        /// <summary> Gets the ogc geometry type. </summary>
        public OgcGeometryType? OgcGeometryType { get; }
        /// <summary> Gets the boundary. </summary>
        public Geometry Boundary { get; }
        /// <summary> Gets the z. </summary>
        public double? Z { get; }
        /// <summary> Gets the m. </summary>
        public double? M { get; }
    }
}
