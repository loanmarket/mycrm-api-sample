// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    /// <summary> The DealStructureImportantDatesType. </summary>
    public readonly partial struct DealStructureImportantDatesType : IEquatable<DealStructureImportantDatesType>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="DealStructureImportantDatesType"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DealStructureImportantDatesType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string DealStructureImportantDatesValue = "deal-structure-important-dates";

        /// <summary> deal-structure-important-dates. </summary>
        public static DealStructureImportantDatesType DealStructureImportantDates { get; } = new DealStructureImportantDatesType(DealStructureImportantDatesValue);
        /// <summary> Determines if two <see cref="DealStructureImportantDatesType"/> values are the same. </summary>
        public static bool operator ==(DealStructureImportantDatesType left, DealStructureImportantDatesType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DealStructureImportantDatesType"/> values are not the same. </summary>
        public static bool operator !=(DealStructureImportantDatesType left, DealStructureImportantDatesType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="DealStructureImportantDatesType"/>. </summary>
        public static implicit operator DealStructureImportantDatesType(string value) => new DealStructureImportantDatesType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DealStructureImportantDatesType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DealStructureImportantDatesType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
