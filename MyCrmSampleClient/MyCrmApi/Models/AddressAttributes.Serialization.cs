// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    public partial class AddressAttributes : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(PostCode))
            {
                if (PostCode != null)
                {
                    writer.WritePropertyName("postCode");
                    writer.WriteStringValue(PostCode);
                }
                else
                {
                    writer.WriteNull("postCode");
                }
            }
            if (Optional.IsDefined(Suburb))
            {
                if (Suburb != null)
                {
                    writer.WritePropertyName("suburb");
                    writer.WriteStringValue(Suburb);
                }
                else
                {
                    writer.WriteNull("suburb");
                }
            }
            if (Optional.IsDefined(StreetAddress))
            {
                if (StreetAddress != null)
                {
                    writer.WritePropertyName("streetAddress");
                    writer.WriteStringValue(StreetAddress);
                }
                else
                {
                    writer.WriteNull("streetAddress");
                }
            }
            if (Optional.IsDefined(Country))
            {
                if (Country != null)
                {
                    writer.WritePropertyName("country");
                    writer.WriteStringValue(Country);
                }
                else
                {
                    writer.WriteNull("country");
                }
            }
            if (Optional.IsDefined(State))
            {
                if (State != null)
                {
                    writer.WritePropertyName("state");
                    writer.WriteStringValue(State);
                }
                else
                {
                    writer.WriteNull("state");
                }
            }
            writer.WriteEndObject();
        }

        internal static AddressAttributes DeserializeAddressAttributes(JsonElement element)
        {
            Optional<string> postCode = default;
            Optional<string> suburb = default;
            Optional<string> streetAddress = default;
            Optional<string> country = default;
            Optional<string> state = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("postCode"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        postCode = null;
                        continue;
                    }
                    postCode = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("suburb"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        suburb = null;
                        continue;
                    }
                    suburb = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("streetAddress"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        streetAddress = null;
                        continue;
                    }
                    streetAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("country"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        country = null;
                        continue;
                    }
                    country = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("state"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        state = null;
                        continue;
                    }
                    state = property.Value.GetString();
                    continue;
                }
            }
            return new AddressAttributes(postCode.Value, suburb.Value, streetAddress.Value, country.Value, state.Value);
        }
    }
}
