// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    /// <summary> The Ordinates. </summary>
    internal readonly partial struct Ordinates : IEquatable<Ordinates>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="Ordinates"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public Ordinates(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoneValue = "None";
        private const string XValue = "X";
        private const string YValue = "Y";
        private const string XYValue = "XY";
        private const string ZValue = "Z";
        private const string XYZValue = "XYZ";
        private const string Spatial4Value = "Spatial4";
        private const string Spatial5Value = "Spatial5";
        private const string Spatial6Value = "Spatial6";
        private const string Spatial7Value = "Spatial7";
        private const string Spatial8Value = "Spatial8";
        private const string Spatial9Value = "Spatial9";
        private const string Spatial10Value = "Spatial10";
        private const string Spatial11Value = "Spatial11";
        private const string Spatial12Value = "Spatial12";
        private const string Spatial13Value = "Spatial13";
        private const string Spatial14Value = "Spatial14";
        private const string Spatial15Value = "Spatial15";
        private const string Spatial16Value = "Spatial16";
        private const string AllSpatialOrdinatesValue = "AllSpatialOrdinates";
        private const string MValue = "M";
        private const string XYMValue = "XYM";
        private const string XyzmValue = "XYZM";
        private const string Measure2Value = "Measure2";
        private const string Measure3Value = "Measure3";
        private const string Measure4Value = "Measure4";
        private const string Measure5Value = "Measure5";
        private const string Measure6Value = "Measure6";
        private const string Measure7Value = "Measure7";
        private const string Measure8Value = "Measure8";
        private const string Measure9Value = "Measure9";
        private const string Measure10Value = "Measure10";
        private const string Measure11Value = "Measure11";
        private const string Measure12Value = "Measure12";
        private const string Measure13Value = "Measure13";
        private const string Measure14Value = "Measure14";
        private const string Measure15Value = "Measure15";
        private const string Measure16Value = "Measure16";
        private const string AllMeasureOrdinatesValue = "AllMeasureOrdinates";
        private const string AllOrdinatesValue = "AllOrdinates";

        /// <summary> None. </summary>
        public static Ordinates None { get; } = new Ordinates(NoneValue);
        /// <summary> X. </summary>
        public static Ordinates X { get; } = new Ordinates(XValue);
        /// <summary> Y. </summary>
        public static Ordinates Y { get; } = new Ordinates(YValue);
        /// <summary> XY. </summary>
        public static Ordinates XY { get; } = new Ordinates(XYValue);
        /// <summary> Z. </summary>
        public static Ordinates Z { get; } = new Ordinates(ZValue);
        /// <summary> XYZ. </summary>
        public static Ordinates XYZ { get; } = new Ordinates(XYZValue);
        /// <summary> Spatial4. </summary>
        public static Ordinates Spatial4 { get; } = new Ordinates(Spatial4Value);
        /// <summary> Spatial5. </summary>
        public static Ordinates Spatial5 { get; } = new Ordinates(Spatial5Value);
        /// <summary> Spatial6. </summary>
        public static Ordinates Spatial6 { get; } = new Ordinates(Spatial6Value);
        /// <summary> Spatial7. </summary>
        public static Ordinates Spatial7 { get; } = new Ordinates(Spatial7Value);
        /// <summary> Spatial8. </summary>
        public static Ordinates Spatial8 { get; } = new Ordinates(Spatial8Value);
        /// <summary> Spatial9. </summary>
        public static Ordinates Spatial9 { get; } = new Ordinates(Spatial9Value);
        /// <summary> Spatial10. </summary>
        public static Ordinates Spatial10 { get; } = new Ordinates(Spatial10Value);
        /// <summary> Spatial11. </summary>
        public static Ordinates Spatial11 { get; } = new Ordinates(Spatial11Value);
        /// <summary> Spatial12. </summary>
        public static Ordinates Spatial12 { get; } = new Ordinates(Spatial12Value);
        /// <summary> Spatial13. </summary>
        public static Ordinates Spatial13 { get; } = new Ordinates(Spatial13Value);
        /// <summary> Spatial14. </summary>
        public static Ordinates Spatial14 { get; } = new Ordinates(Spatial14Value);
        /// <summary> Spatial15. </summary>
        public static Ordinates Spatial15 { get; } = new Ordinates(Spatial15Value);
        /// <summary> Spatial16. </summary>
        public static Ordinates Spatial16 { get; } = new Ordinates(Spatial16Value);
        /// <summary> AllSpatialOrdinates. </summary>
        public static Ordinates AllSpatialOrdinates { get; } = new Ordinates(AllSpatialOrdinatesValue);
        /// <summary> M. </summary>
        public static Ordinates M { get; } = new Ordinates(MValue);
        /// <summary> XYM. </summary>
        public static Ordinates XYM { get; } = new Ordinates(XYMValue);
        /// <summary> XYZM. </summary>
        public static Ordinates Xyzm { get; } = new Ordinates(XyzmValue);
        /// <summary> Measure2. </summary>
        public static Ordinates Measure2 { get; } = new Ordinates(Measure2Value);
        /// <summary> Measure3. </summary>
        public static Ordinates Measure3 { get; } = new Ordinates(Measure3Value);
        /// <summary> Measure4. </summary>
        public static Ordinates Measure4 { get; } = new Ordinates(Measure4Value);
        /// <summary> Measure5. </summary>
        public static Ordinates Measure5 { get; } = new Ordinates(Measure5Value);
        /// <summary> Measure6. </summary>
        public static Ordinates Measure6 { get; } = new Ordinates(Measure6Value);
        /// <summary> Measure7. </summary>
        public static Ordinates Measure7 { get; } = new Ordinates(Measure7Value);
        /// <summary> Measure8. </summary>
        public static Ordinates Measure8 { get; } = new Ordinates(Measure8Value);
        /// <summary> Measure9. </summary>
        public static Ordinates Measure9 { get; } = new Ordinates(Measure9Value);
        /// <summary> Measure10. </summary>
        public static Ordinates Measure10 { get; } = new Ordinates(Measure10Value);
        /// <summary> Measure11. </summary>
        public static Ordinates Measure11 { get; } = new Ordinates(Measure11Value);
        /// <summary> Measure12. </summary>
        public static Ordinates Measure12 { get; } = new Ordinates(Measure12Value);
        /// <summary> Measure13. </summary>
        public static Ordinates Measure13 { get; } = new Ordinates(Measure13Value);
        /// <summary> Measure14. </summary>
        public static Ordinates Measure14 { get; } = new Ordinates(Measure14Value);
        /// <summary> Measure15. </summary>
        public static Ordinates Measure15 { get; } = new Ordinates(Measure15Value);
        /// <summary> Measure16. </summary>
        public static Ordinates Measure16 { get; } = new Ordinates(Measure16Value);
        /// <summary> AllMeasureOrdinates. </summary>
        public static Ordinates AllMeasureOrdinates { get; } = new Ordinates(AllMeasureOrdinatesValue);
        /// <summary> AllOrdinates. </summary>
        public static Ordinates AllOrdinates { get; } = new Ordinates(AllOrdinatesValue);
        /// <summary> Determines if two <see cref="Ordinates"/> values are the same. </summary>
        public static bool operator ==(Ordinates left, Ordinates right) => left.Equals(right);
        /// <summary> Determines if two <see cref="Ordinates"/> values are not the same. </summary>
        public static bool operator !=(Ordinates left, Ordinates right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="Ordinates"/>. </summary>
        public static implicit operator Ordinates(string value) => new Ordinates(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is Ordinates other && Equals(other);
        /// <inheritdoc />
        public bool Equals(Ordinates other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
