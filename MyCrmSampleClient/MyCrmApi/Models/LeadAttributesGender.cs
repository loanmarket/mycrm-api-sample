// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    /// <summary> The LeadAttributesGender. </summary>
    public readonly partial struct LeadAttributesGender : IEquatable<LeadAttributesGender>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="LeadAttributesGender"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public LeadAttributesGender(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string MaleValue = "Male";
        private const string FemaleValue = "Female";
        private const string UndisclosedValue = "Undisclosed";

        /// <summary> Male. </summary>
        public static LeadAttributesGender Male { get; } = new LeadAttributesGender(MaleValue);
        /// <summary> Female. </summary>
        public static LeadAttributesGender Female { get; } = new LeadAttributesGender(FemaleValue);
        /// <summary> Undisclosed. </summary>
        public static LeadAttributesGender Undisclosed { get; } = new LeadAttributesGender(UndisclosedValue);
        /// <summary> Determines if two <see cref="LeadAttributesGender"/> values are the same. </summary>
        public static bool operator ==(LeadAttributesGender left, LeadAttributesGender right) => left.Equals(right);
        /// <summary> Determines if two <see cref="LeadAttributesGender"/> values are not the same. </summary>
        public static bool operator !=(LeadAttributesGender left, LeadAttributesGender right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="LeadAttributesGender"/>. </summary>
        public static implicit operator LeadAttributesGender(string value) => new LeadAttributesGender(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is LeadAttributesGender other && Equals(other);
        /// <inheritdoc />
        public bool Equals(LeadAttributesGender other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
