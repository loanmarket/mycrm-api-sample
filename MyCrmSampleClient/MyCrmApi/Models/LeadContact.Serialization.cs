// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    public partial class LeadContact : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Lid))
            {
                if (Lid != null)
                {
                    writer.WritePropertyName("lid");
                    writer.WriteStringValue(Lid);
                }
                else
                {
                    writer.WriteNull("lid");
                }
            }
            if (Optional.IsDefined(Title))
            {
                writer.WritePropertyName("title");
                writer.WriteStringValue(Title.Value.ToString());
            }
            if (Optional.IsDefined(FirstName))
            {
                if (FirstName != null)
                {
                    writer.WritePropertyName("firstName");
                    writer.WriteStringValue(FirstName);
                }
                else
                {
                    writer.WriteNull("firstName");
                }
            }
            if (Optional.IsDefined(PreferredName))
            {
                if (PreferredName != null)
                {
                    writer.WritePropertyName("preferredName");
                    writer.WriteStringValue(PreferredName);
                }
                else
                {
                    writer.WriteNull("preferredName");
                }
            }
            if (Optional.IsDefined(LastName))
            {
                if (LastName != null)
                {
                    writer.WritePropertyName("lastName");
                    writer.WriteStringValue(LastName);
                }
                else
                {
                    writer.WriteNull("lastName");
                }
            }
            if (Optional.IsDefined(Email))
            {
                if (Email != null)
                {
                    writer.WritePropertyName("email");
                    writer.WriteStringValue(Email);
                }
                else
                {
                    writer.WriteNull("email");
                }
            }
            if (Optional.IsDefined(Mobile))
            {
                if (Mobile != null)
                {
                    writer.WritePropertyName("mobile");
                    writer.WriteStringValue(Mobile);
                }
                else
                {
                    writer.WriteNull("mobile");
                }
            }
            if (Optional.IsDefined(HomePhone))
            {
                if (HomePhone != null)
                {
                    writer.WritePropertyName("homePhone");
                    writer.WriteStringValue(HomePhone);
                }
                else
                {
                    writer.WriteNull("homePhone");
                }
            }
            if (Optional.IsDefined(BusinessPhone))
            {
                if (BusinessPhone != null)
                {
                    writer.WritePropertyName("businessPhone");
                    writer.WriteStringValue(BusinessPhone);
                }
                else
                {
                    writer.WriteNull("businessPhone");
                }
            }
            if (Optional.IsDefined(DateOfBirthAsString))
            {
                if (DateOfBirthAsString != null)
                {
                    writer.WritePropertyName("dateOfBirthAsString");
                    writer.WriteStringValue(DateOfBirthAsString.Value, "D");
                }
                else
                {
                    writer.WriteNull("dateOfBirthAsString");
                }
            }
            if (Optional.IsDefined(DateOfBirth))
            {
                if (DateOfBirth != null)
                {
                    writer.WritePropertyName("dateOfBirth");
                    writer.WriteStringValue(DateOfBirth.Value, "O");
                }
                else
                {
                    writer.WriteNull("dateOfBirth");
                }
            }
            if (Optional.IsDefined(Gender))
            {
                writer.WritePropertyName("gender");
                writer.WriteStringValue(Gender.Value.ToString());
            }
            if (Optional.IsDefined(MaritalStatus))
            {
                writer.WritePropertyName("maritalStatus");
                writer.WriteStringValue(MaritalStatus.Value.ToString());
            }
            if (Optional.IsDefined(HasMarketingConsent))
            {
                if (HasMarketingConsent != null)
                {
                    writer.WritePropertyName("hasMarketingConsent");
                    writer.WriteBooleanValue(HasMarketingConsent.Value);
                }
                else
                {
                    writer.WriteNull("hasMarketingConsent");
                }
            }
            if (Optional.IsDefined(IsGuarantor))
            {
                if (IsGuarantor != null)
                {
                    writer.WritePropertyName("isGuarantor");
                    writer.WriteBooleanValue(IsGuarantor.Value);
                }
                else
                {
                    writer.WriteNull("isGuarantor");
                }
            }
            if (Optional.IsDefined(IsDependant))
            {
                if (IsDependant != null)
                {
                    writer.WritePropertyName("isDependant");
                    writer.WriteBooleanValue(IsDependant.Value);
                }
                else
                {
                    writer.WriteNull("isDependant");
                }
            }
            if (Optional.IsDefined(IsPrimary))
            {
                if (IsPrimary != null)
                {
                    writer.WritePropertyName("isPrimary");
                    writer.WriteBooleanValue(IsPrimary.Value);
                }
                else
                {
                    writer.WriteNull("isPrimary");
                }
            }
            if (Optional.IsCollectionDefined(Addresses))
            {
                if (Addresses != null)
                {
                    writer.WritePropertyName("addresses");
                    writer.WriteStartArray();
                    foreach (var item in Addresses)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("addresses");
                }
            }
            if (Optional.IsCollectionDefined(Employments))
            {
                if (Employments != null)
                {
                    writer.WritePropertyName("employments");
                    writer.WriteStartArray();
                    foreach (var item in Employments)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("employments");
                }
            }
            writer.WriteEndObject();
        }

        internal static LeadContact DeserializeLeadContact(JsonElement element)
        {
            Optional<string> lid = default;
            Optional<Title> title = default;
            Optional<string> firstName = default;
            Optional<string> preferredName = default;
            Optional<string> lastName = default;
            Optional<string> email = default;
            Optional<string> mobile = default;
            Optional<string> homePhone = default;
            Optional<string> businessPhone = default;
            Optional<DateTimeOffset?> dateOfBirthAsString = default;
            Optional<DateTimeOffset?> dateOfBirth = default;
            Optional<Gender> gender = default;
            Optional<MaritalStatus> maritalStatus = default;
            Optional<bool?> hasMarketingConsent = default;
            Optional<bool?> isGuarantor = default;
            Optional<bool?> isDependant = default;
            Optional<bool?> isPrimary = default;
            Optional<IList<LeadAddressReference>> addresses = default;
            Optional<IList<LeadEmploymentReference>> employments = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("lid"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lid = null;
                        continue;
                    }
                    lid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("title"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    title = new Title(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("firstName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        firstName = null;
                        continue;
                    }
                    firstName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("preferredName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        preferredName = null;
                        continue;
                    }
                    preferredName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lastName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lastName = null;
                        continue;
                    }
                    lastName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("email"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        email = null;
                        continue;
                    }
                    email = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("mobile"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        mobile = null;
                        continue;
                    }
                    mobile = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("homePhone"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        homePhone = null;
                        continue;
                    }
                    homePhone = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("businessPhone"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        businessPhone = null;
                        continue;
                    }
                    businessPhone = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dateOfBirthAsString"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        dateOfBirthAsString = null;
                        continue;
                    }
                    dateOfBirthAsString = property.Value.GetDateTimeOffset("D");
                    continue;
                }
                if (property.NameEquals("dateOfBirth"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        dateOfBirth = null;
                        continue;
                    }
                    dateOfBirth = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("gender"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    gender = new Gender(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("maritalStatus"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    maritalStatus = new MaritalStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("hasMarketingConsent"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        hasMarketingConsent = null;
                        continue;
                    }
                    hasMarketingConsent = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("isGuarantor"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        isGuarantor = null;
                        continue;
                    }
                    isGuarantor = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("isDependant"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        isDependant = null;
                        continue;
                    }
                    isDependant = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("isPrimary"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        isPrimary = null;
                        continue;
                    }
                    isPrimary = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("addresses"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        addresses = null;
                        continue;
                    }
                    List<LeadAddressReference> array = new List<LeadAddressReference>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(LeadAddressReference.DeserializeLeadAddressReference(item));
                    }
                    addresses = array;
                    continue;
                }
                if (property.NameEquals("employments"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        employments = null;
                        continue;
                    }
                    List<LeadEmploymentReference> array = new List<LeadEmploymentReference>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(LeadEmploymentReference.DeserializeLeadEmploymentReference(item));
                    }
                    employments = array;
                    continue;
                }
            }
            return new LeadContact(lid.Value, Optional.ToNullable(title), firstName.Value, preferredName.Value, lastName.Value, email.Value, mobile.Value, homePhone.Value, businessPhone.Value, Optional.ToNullable(dateOfBirthAsString), Optional.ToNullable(dateOfBirth), Optional.ToNullable(gender), Optional.ToNullable(maritalStatus), Optional.ToNullable(hasMarketingConsent), Optional.ToNullable(isGuarantor), Optional.ToNullable(isDependant), Optional.ToNullable(isPrimary), Optional.ToList(addresses), Optional.ToList(employments));
        }
    }
}
