// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    /// <summary> The ImportantDatesSet. </summary>
    public partial class ImportantDatesSet
    {
        /// <summary> Initializes a new instance of ImportantDatesSet. </summary>
        public ImportantDatesSet()
        {
        }

        /// <summary> Initializes a new instance of ImportantDatesSet. </summary>
        /// <param name="settled"></param>
        /// <param name="lodged"></param>
        /// <param name="financeClause"></param>
        /// <param name="notProceeding"></param>
        /// <param name="approved"></param>
        /// <param name="preApproved"></param>
        /// <param name="conditionallyApproved"></param>
        /// <param name="preApprovedExpiry"></param>
        /// <param name="estimatedSettled"></param>
        internal ImportantDatesSet(DateTimeOffset? settled, DateTimeOffset? lodged, DateTimeOffset? financeClause, DateTimeOffset? notProceeding, DateTimeOffset? approved, DateTimeOffset? preApproved, DateTimeOffset? conditionallyApproved, DateTimeOffset? preApprovedExpiry, DateTimeOffset? estimatedSettled)
        {
            Settled = settled;
            Lodged = lodged;
            FinanceClause = financeClause;
            NotProceeding = notProceeding;
            Approved = approved;
            PreApproved = preApproved;
            ConditionallyApproved = conditionallyApproved;
            PreApprovedExpiry = preApprovedExpiry;
            EstimatedSettled = estimatedSettled;
        }

        /// <summary> Gets or sets the settled. </summary>
        public DateTimeOffset? Settled { get; set; }
        /// <summary> Gets or sets the lodged. </summary>
        public DateTimeOffset? Lodged { get; set; }
        /// <summary> Gets or sets the finance clause. </summary>
        public DateTimeOffset? FinanceClause { get; set; }
        /// <summary> Gets or sets the not proceeding. </summary>
        public DateTimeOffset? NotProceeding { get; set; }
        /// <summary> Gets or sets the approved. </summary>
        public DateTimeOffset? Approved { get; set; }
        /// <summary> Gets or sets the pre approved. </summary>
        public DateTimeOffset? PreApproved { get; set; }
        /// <summary> Gets or sets the conditionally approved. </summary>
        public DateTimeOffset? ConditionallyApproved { get; set; }
        /// <summary> Gets or sets the pre approved expiry. </summary>
        public DateTimeOffset? PreApprovedExpiry { get; set; }
        /// <summary> Gets or sets the estimated settled. </summary>
        public DateTimeOffset? EstimatedSettled { get; set; }
    }
}
