// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    public partial class Split
    {
        internal static Split DeserializeSplit(JsonElement element)
        {
            Optional<double?> loanTermYears = default;
            Optional<string> rateType = default;
            Optional<LoanStructureType> loanStructureType = default;
            Optional<double?> amount = default;
            Optional<double?> interestRate = default;
            Optional<int?> rateTypePeriodMonths = default;
            Optional<double?> paymentAmount = default;
            Optional<IReadOnlyList<SplitDates>> dates = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("loanTermYears"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        loanTermYears = null;
                        continue;
                    }
                    loanTermYears = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("rateType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        rateType = null;
                        continue;
                    }
                    rateType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("loanStructureType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    loanStructureType = new LoanStructureType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("amount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        amount = null;
                        continue;
                    }
                    amount = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("interestRate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        interestRate = null;
                        continue;
                    }
                    interestRate = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("rateTypePeriodMonths"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        rateTypePeriodMonths = null;
                        continue;
                    }
                    rateTypePeriodMonths = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("paymentAmount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        paymentAmount = null;
                        continue;
                    }
                    paymentAmount = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("dates"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        dates = null;
                        continue;
                    }
                    List<SplitDates> array = new List<SplitDates>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(SplitDates.DeserializeSplitDates(item));
                    }
                    dates = array;
                    continue;
                }
            }
            return new Split(Optional.ToNullable(loanTermYears), rateType.Value, Optional.ToNullable(loanStructureType), Optional.ToNullable(amount), Optional.ToNullable(interestRate), Optional.ToNullable(rateTypePeriodMonths), Optional.ToNullable(paymentAmount), Optional.ToList(dates));
        }
    }
}
