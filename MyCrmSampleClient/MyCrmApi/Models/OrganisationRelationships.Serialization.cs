// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace MyCrmSampleClient.MyCrmApi.Models
{
    public partial class OrganisationRelationships : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Advisers))
            {
                writer.WritePropertyName("advisers");
                writer.WriteObjectValue(Advisers);
            }
            if (Optional.IsDefined(Addresses))
            {
                writer.WritePropertyName("addresses");
                writer.WriteObjectValue(Addresses);
            }
            writer.WriteEndObject();
        }

        internal static OrganisationRelationships DeserializeOrganisationRelationships(JsonElement element)
        {
            Optional<RelationshipsMultipleDocument> advisers = default;
            Optional<RelationshipsMultipleDocument> addresses = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("advisers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    advisers = RelationshipsMultipleDocument.DeserializeRelationshipsMultipleDocument(property.Value);
                    continue;
                }
                if (property.NameEquals("addresses"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    addresses = RelationshipsMultipleDocument.DeserializeRelationshipsMultipleDocument(property.Value);
                    continue;
                }
            }
            return new OrganisationRelationships(advisers.Value, addresses.Value);
        }
    }
}
