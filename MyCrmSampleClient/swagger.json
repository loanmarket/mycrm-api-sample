{
  "openapi": "3.0.1",
  "info": {
    "title": "MyCRM JsonApi",
    "version": "v1"
  },
  "paths": {
    "/jsonapi/advisers/{id}": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets a single adviser by id",
        "description": "Where `id` is the identifier of the adviser. aka MyCrm family_id",
        "operationId": "Adviser_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdviserDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/advisers": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets a collection of advisers",
        "operationId": "Advisers_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/adviser-details/{id}": {
      "get": {
        "tags": [
          "AdviserDetails"
        ],
        "summary": "Gets a single set of adviser details by id",
        "description": "Where `id` is the identifier of the set of adviser details.  aka ClientId, aka My Crm ID",
        "operationId": "AdviserDetail_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdviserDetailDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/adviser-details": {
      "get": {
        "tags": [
          "AdviserDetails"
        ],
        "summary": "Gets adviser details for a collection of advisers",
        "operationId": "AdviserDetails_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdviserDetailsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/adviser-details/{id}/relationships/adviser": {
      "get": {
        "tags": [
          "AdviserDetails"
        ],
        "summary": "Gets advisers related to a single set of adviser details",
        "description": "Where `id` is the identifier of the set of adviser details.  aka ClientId, aka My Crm ID",
        "operationId": "AdviserDetailRelationship_Get_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-external-references/{id}/contact": {
      "get": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Gets contacts via a single related contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelated_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactExternalReferenceRelated_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-external-references": {
      "get": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Gets a collection of external references of contacts",
        "operationId": "ContactExternalReferences_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactExternalReferencesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactExternalReferences_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Creates a new contact external reference with attributes, relationships or both",
        "operationId": "ContactExternalReference_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactExternalReferenceDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactExternalReferenceDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-external-references/{id}": {
      "get": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Gets a single contact external reference by id",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReference_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactExternalReferenceDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactExternalReference_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Updates the attributes and/or relationships of an existing contact external reference. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReference_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactExternalReferenceDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactExternalReferenceDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Deletes an existing contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReference_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-external-references/{id}/relationships/contact": {
      "get": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Gets a contacts related to a single contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelationship_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactExternalReferenceRelationship_Get_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Adds contacts to a to-many relationship with an existing contact external reference",
        "description": "Where `id` is the identifier of the primary contact external reference resource",
        "operationId": "ContactExternalReferenceRelationship_Post_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Performs a complete replacement of a contact relationship on an existing contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelationship_Patch_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Removes a contact external reference from a to-many relationship with contacts",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelationship_Delete_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/contacts": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets contacts via a single related contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelated_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelated_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets a collection of contact groups",
        "operationId": "ContactGroups_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroups_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Creates a new contact group with attributes, relationships or both",
        "operationId": "ContactGroup_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets a single contact group by id",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroup_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroup_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Updates the attributes and/or relationships of an existing contact group. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroup_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Deletes an existing contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroup_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/relationships/contacts": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets a contacts related to a single contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelationship_Get_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Adds contacts to a to-many relationship with an existing contact group",
        "description": "Where `id` is the identifier of the primary contact group resource",
        "operationId": "ContactGroupRelationship_Post_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Performs a complete replacement of a contacts relationship on an existing contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Patch_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Removes a contact group from a to-many relationship with contacts",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Delete_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/contactGroup": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets contactGroups via a single related contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelated_Get_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelated_Head_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-marketing/{id}": {
      "patch": {
        "tags": [
          "ContactMarketingConsent"
        ],
        "summary": "Updates the marketing consent declaration of an existing contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactMarketing_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMarketingDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactMarketingDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ContactMarketingConsent"
        ],
        "summary": "Gets the marketing consent declaration of a single contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactMarketing_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactMarketingDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Creates a new contact with attributes, relationships or both",
        "operationId": "Contact_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets a collection of contacts",
        "operationId": "Contacts_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Contacts_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}": {
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Updates the attributes and/or relationships of an existing contact. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "Contact_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets a single contact by id",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "Contact_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Contact_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Deletes an existing contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "Contact_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/relationships/contactGroup": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets a contactGroups related to a single contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Get_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelationship_Get_Head_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Adds contactGroups to a to-many relationship with an existing contact",
        "description": "Where `id` is the identifier of the primary contact resource",
        "operationId": "ContactRelationship_Post_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Performs a complete replacement of a contactGroup relationship on an existing contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Patch_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Removes a contact from a to-many relationship with contactGroups",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Delete_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-external-references/{id}/deal": {
      "get": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Gets deals via a single related deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelated_Get_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealExternalReferenceRelated_Head_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-external-references": {
      "get": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Gets a collection of external references of deals",
        "operationId": "DealExternalReferences_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealExternalReferencesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealExternalReferences_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Creates a new deal external reference with attributes, relationships or both",
        "operationId": "DealExternalReference_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DealExternalReferenceDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealExternalReferenceDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-external-references/{id}": {
      "get": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Gets a single deal external reference by id",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReference_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealExternalReferenceDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealExternalReference_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Updates the attributes and/or relationships of an existing deal external reference. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReference_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DealExternalReferenceDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealExternalReferenceDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Deletes an existing deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReference_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-external-references/{id}/relationships/deal": {
      "get": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Gets a deals related to a single deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelationship_Get_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealExternalReferenceRelationship_Get_Head_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Adds deals to a to-many relationship with an existing deal external reference",
        "description": "Where `id` is the identifier of the primary deal external reference resource",
        "operationId": "DealExternalReferenceRelationship_Post_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Performs a complete replacement of a deal relationship on an existing deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelationship_Patch_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Removes a deal external reference from a to-many relationship with deals",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelationship_Delete_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-participants/{id}/contact": {
      "get": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Gets contacts via a single related participants in a deal",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipantRelated_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealParticipantRelated_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-participants": {
      "get": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Gets a collection of participants in deals",
        "operationId": "DealParticipants_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealParticipantsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealParticipants_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Creates a new participants in a deal with attributes, relationships or both",
        "operationId": "DealParticipant_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DealParticipantDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealParticipantDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-participants/{id}": {
      "get": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Gets a single participants in a deal by id",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipant_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealParticipantDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealParticipant_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Updates the attributes and/or relationships of an existing participants in a deal. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipant_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DealParticipantDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealParticipantDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Deletes an existing participants in a deal",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipant_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-participants/{id}/relationships/contact": {
      "get": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Gets a contacts related to a single participants in a deal",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipantRelationship_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealParticipantRelationship_Get_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Adds contacts to a to-many relationship with an existing participants in a deal",
        "description": "Where `id` is the identifier of the primary participants in a deal resource",
        "operationId": "DealParticipantRelationship_Post_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Performs a complete replacement of a contact relationship on an existing participants in a deal",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipantRelationship_Patch_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Removes a participants in a deal from a to-many relationship with contacts",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipantRelationship_Delete_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/dealScenario": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets dealScenarios via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_DealScenarios",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealScenariosDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_DealScenarios",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a collection of deals",
        "operationId": "Deals_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Deals_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deals"
        ],
        "summary": "Creates a new deal with attributes, relationships or both",
        "operationId": "Deal_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DealDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a single deal by id",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "Deal_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Deal_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Deals"
        ],
        "summary": "Updates the attributes and/or relationships of an existing deal. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "Deal_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DealDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deals"
        ],
        "summary": "Deletes an existing deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "Deal_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/dealScenario": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a dealScenarios related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_DealScenarios",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_DealScenarios",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deals"
        ],
        "summary": "Adds dealScenarios to a to-many relationship with an existing deal",
        "description": "Where `id` is the identifier of the primary deal resource",
        "operationId": "DealRelationship_Post_DealScenarios",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Deals"
        ],
        "summary": "Performs a complete replacement of a dealScenario relationship on an existing deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Patch_DealScenarios",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deals"
        ],
        "summary": "Removes a deal from a to-many relationship with dealScenarios",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Delete_DealScenarios",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/integrations/{id}/contactExternalReferences": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Gets contactExternalReferences via a single related integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelated_Get_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactExternalReferencesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Integrations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IntegrationRelated_Head_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/integrations": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Gets a collection of integrations",
        "operationId": "Integrations_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Integrations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Integrations_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Creates a new integration with attributes, relationships or both",
        "operationId": "Integration_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/integrations/{id}": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Gets a single integration by id",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "Integration_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Integrations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Integration_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Integrations"
        ],
        "summary": "Updates the attributes and/or relationships of an existing integration. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "Integration_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Integrations"
        ],
        "summary": "Deletes an existing integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "Integration_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/integrations/{id}/relationships/contactExternalReferences": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Gets a contactExternalReferences related to a single integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelationship_Get_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Integrations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IntegrationRelationship_Get_Head_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Adds contactExternalReferences to a to-many relationship with an existing integration",
        "description": "Where `id` is the identifier of the primary integration resource",
        "operationId": "IntegrationRelationship_Post_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Integrations"
        ],
        "summary": "Performs a complete replacement of a contactExternalReferences relationship on an existing integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelationship_Patch_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Integrations"
        ],
        "summary": "Removes a integration from a to-many relationship with contactExternalReferences",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelationship_Delete_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-notes/{id}/deal": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Gets deals via a single related deal note",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNoteRelated_Get_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealNoteRelated_Head_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/leads": {
      "post": {
        "tags": [
          "Leads"
        ],
        "summary": "Creates a lead, including contact and deal attributes",
        "operationId": "Lead_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/LeadDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/leads/{id}": {
      "get": {
        "tags": [
          "Leads"
        ],
        "summary": "Gets select details if an existing lead",
        "description": "Where `id` is the identifier of the lead",
        "operationId": "Lead_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-notes": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Gets a collection of notes on deals",
        "operationId": "DealNotes_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealNotesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealNotes_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Creates a new deal note with attributes, relationships or both",
        "operationId": "DealNote_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DealNoteDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealNoteDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-notes/{id}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Gets a single deal note by id",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNote_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealNoteDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealNote_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Notes"
        ],
        "summary": "Updates the attributes and/or relationships of an existing deal note. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNote_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DealNoteDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealNoteDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Notes"
        ],
        "summary": "Deletes an existing deal note",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNote_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-notes/{id}/relationships/deal": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Gets a deals related to a single deal note",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNoteRelationship_Get_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealNoteRelationship_Get_Head_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Adds deals to a to-many relationship with an existing deal note",
        "description": "Where `id` is the identifier of the primary deal note resource",
        "operationId": "DealNoteRelationship_Post_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Notes"
        ],
        "summary": "Performs a complete replacement of a deal relationship on an existing deal note",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNoteRelationship_Patch_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Notes"
        ],
        "summary": "Removes a deal note from a to-many relationship with deals",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNoteRelationship_Delete_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/organisations/{id}": {
      "get": {
        "tags": [
          "Organisations"
        ],
        "summary": "Gets a single organisation by id",
        "description": "Where `id` is the identifier of the organisation. aka OrgId",
        "operationId": "Organisation_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/organisations": {
      "get": {
        "tags": [
          "Organisations"
        ],
        "summary": "Gets a collection of organisations",
        "operationId": "Organisations_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/referrers": {
      "get": {
        "tags": [
          "Referrers"
        ],
        "summary": "Gets a collection of referrers",
        "operationId": "ContactGroupReferrers_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupReferrersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Referrers"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupReferrers_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Referrers"
        ],
        "summary": "Creates a new referrer with attributes, relationships or both",
        "operationId": "ContactGroupReferrer_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupReferrerDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupReferrerDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/referrers/{id}": {
      "get": {
        "tags": [
          "Referrers"
        ],
        "summary": "Gets a single referrer by id",
        "description": "Where `id` is the identifier of the referrer",
        "operationId": "ContactGroupReferrer_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupReferrerDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Referrers"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupReferrer_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Referrers"
        ],
        "summary": "Updates the attributes and/or relationships of an existing referrer. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the referrer",
        "operationId": "ContactGroupReferrer_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupReferrerDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupReferrerDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Referrers"
        ],
        "summary": "Deletes an existing referrer",
        "description": "Where `id` is the identifier of the referrer",
        "operationId": "ContactGroupReferrer_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/referrers/{id}/{relationshipName}": {
      "get": {
        "tags": [
          "Referrers"
        ],
        "summary": "Gets {{{RelationshipNames}}} via a single related referrer",
        "description": "Where `id` is the identifier of the referrer",
        "operationId": "ContactGroupReferrerRelated_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Referrers"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupReferrerRelated_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/referrers/{id}/relationships/{relationshipName}": {
      "get": {
        "tags": [
          "Referrers"
        ],
        "summary": "Gets a {{{RelationshipNames}}} related to a single referrer",
        "description": "Where `id` is the identifier of the referrer",
        "operationId": "ContactGroupReferrerRelationship_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Referrers"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupReferrerRelationship_Get_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Referrers"
        ],
        "summary": "Adds {{{RelationshipNames}}} to a to-many relationship with an existing referrer",
        "description": "Where `id` is the identifier of the primary referrer resource",
        "operationId": "ContactGroupReferrerRelationship_Post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": { }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Referrers"
        ],
        "summary": "Performs a complete replacement of a {{{RelationshipName}}} relationship on an existing referrer",
        "description": "Where `id` is the identifier of the referrer",
        "operationId": "ContactGroupReferrerRelationship_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": { }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Referrers"
        ],
        "summary": "Removes a referrer from a to-many relationship with {{{RelationshipNames}}}",
        "description": "Where `id` is the identifier of the referrer",
        "operationId": "ContactGroupReferrerRelationship_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/adviser-details/{id}/adviser": {
      "get": {
        "tags": [
          "AdviserDetails"
        ],
        "summary": "Gets advisers via the id of a single related set of adviser details",
        "description": "Where `id` is the identifier of the set of adviser details.  aka ClientId, aka My Crm ID",
        "operationId": "AdviserDetailRelated_Get_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-external-references/{id}/integration": {
      "get": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Gets integrations via a single related contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelated_Get_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactExternalReferenceRelated_Head_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-external-references/{id}/relationships/integration": {
      "get": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Gets a integrations related to a single contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelationship_Get_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactExternalReferenceRelationship_Get_Head_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Adds integrations to a to-many relationship with an existing contact external reference",
        "description": "Where `id` is the identifier of the primary contact external reference resource",
        "operationId": "ContactExternalReferenceRelationship_Post_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Performs a complete replacement of a integration relationship on an existing contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelationship_Patch_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Removes a contact external reference from a to-many relationship with integrations",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelationship_Delete_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/adviser": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets advisers via a single related contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelated_Get_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelated_Head_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/referrerOrganization": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets referrerOrganizations via a single related contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelated_Get_ReferrerOrganizations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferrerOrganizationsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelated_Head_ReferrerOrganizations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/referrer": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets referrers via a single related contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelated_Get_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferrersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelated_Head_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/relationships/adviser": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets a advisers related to a single contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Get_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelationship_Get_Head_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Adds advisers to a to-many relationship with an existing contact group",
        "description": "Where `id` is the identifier of the primary contact group resource",
        "operationId": "ContactGroupRelationship_Post_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Performs a complete replacement of a adviser relationship on an existing contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Patch_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Removes a contact group from a to-many relationship with advisers",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Delete_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/relationships/referrerOrganization": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets a referrerOrganizations related to a single contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Get_ReferrerOrganizations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelationship_Get_Head_ReferrerOrganizations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Adds referrerOrganizations to a to-many relationship with an existing contact group",
        "description": "Where `id` is the identifier of the primary contact group resource",
        "operationId": "ContactGroupRelationship_Post_ReferrerOrganizations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Performs a complete replacement of a referrerOrganization relationship on an existing contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Patch_ReferrerOrganizations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Removes a contact group from a to-many relationship with referrerOrganizations",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Delete_ReferrerOrganizations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/relationships/referrer": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets a referrers related to a single contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Get_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelationship_Get_Head_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Adds referrers to a to-many relationship with an existing contact group",
        "description": "Where `id` is the identifier of the primary contact group resource",
        "operationId": "ContactGroupRelationship_Post_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Performs a complete replacement of a referrer relationship on an existing contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Patch_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Removes a contact group from a to-many relationship with referrers",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Delete_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/externalReferences": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets externalReferences via a single related contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelated_Get_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactExternalReferencesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelated_Head_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/deals": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets deals via a single related contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelated_Get_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealParticipantsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelated_Head_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/contactAddress": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets contactAddresses via a single related contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelated_Get_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactAddressesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelated_Head_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/relationships/externalReferences": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets a externalReferences related to a single contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Get_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelationship_Get_Head_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Adds externalReferences to a to-many relationship with an existing contact",
        "description": "Where `id` is the identifier of the primary contact resource",
        "operationId": "ContactRelationship_Post_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Performs a complete replacement of a externalReferences relationship on an existing contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Patch_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Removes a contact from a to-many relationship with externalReferences",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Delete_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/relationships/deals": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets a deals related to a single contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Get_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelationship_Get_Head_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Adds deals to a to-many relationship with an existing contact",
        "description": "Where `id` is the identifier of the primary contact resource",
        "operationId": "ContactRelationship_Post_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Performs a complete replacement of a deals relationship on an existing contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Patch_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Removes a contact from a to-many relationship with deals",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Delete_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/relationships/contactAddress": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets a contactAddresses related to a single contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Get_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelationship_Get_Head_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Adds contactAddresses to a to-many relationship with an existing contact",
        "description": "Where `id` is the identifier of the primary contact resource",
        "operationId": "ContactRelationship_Post_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Performs a complete replacement of a contactAddress relationship on an existing contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Patch_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Removes a contact from a to-many relationship with contactAddresses",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Delete_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-external-references/{id}/integration": {
      "get": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Gets integrations via a single related deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelated_Get_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealExternalReferenceRelated_Head_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-external-references/{id}/relationships/integration": {
      "get": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Gets a integrations related to a single deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelationship_Get_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealExternalReferenceRelationship_Get_Head_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Adds integrations to a to-many relationship with an existing deal external reference",
        "description": "Where `id` is the identifier of the primary deal external reference resource",
        "operationId": "DealExternalReferenceRelationship_Post_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Performs a complete replacement of a integration relationship on an existing deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelationship_Patch_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Removes a deal external reference from a to-many relationship with integrations",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelationship_Delete_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-participants/{id}/deal": {
      "get": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Gets deals via a single related participants in a deal",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipantRelated_Get_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealParticipantRelated_Head_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-participants/{id}/relationships/deal": {
      "get": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Gets a deals related to a single participants in a deal",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipantRelationship_Get_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealParticipantRelationship_Get_Head_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Adds deals to a to-many relationship with an existing participants in a deal",
        "description": "Where `id` is the identifier of the primary participants in a deal resource",
        "operationId": "DealParticipantRelationship_Post_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Performs a complete replacement of a deal relationship on an existing participants in a deal",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipantRelationship_Patch_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Removes a participants in a deal from a to-many relationship with deals",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipantRelationship_Delete_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/participants": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets participants via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealParticipantsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/externalReferences": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets externalReferences via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealExternalReferencesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/contacts": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets contacts via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/importantDates": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets importantDates via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_DealImportantDates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealImportantDatesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_DealImportantDates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/dealStructures": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets dealStructures via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_DealStructures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealStructuresDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_DealStructures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/adviser": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets advisers via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/dealNotes": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets dealNotes via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_DealNotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealNotesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_DealNotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/participants": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a participants related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deals"
        ],
        "summary": "Adds participants to a to-many relationship with an existing deal",
        "description": "Where `id` is the identifier of the primary deal resource",
        "operationId": "DealRelationship_Post_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Deals"
        ],
        "summary": "Performs a complete replacement of a participants relationship on an existing deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Patch_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deals"
        ],
        "summary": "Removes a deal from a to-many relationship with participants",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Delete_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/externalReferences": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a externalReferences related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deals"
        ],
        "summary": "Adds externalReferences to a to-many relationship with an existing deal",
        "description": "Where `id` is the identifier of the primary deal resource",
        "operationId": "DealRelationship_Post_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Deals"
        ],
        "summary": "Performs a complete replacement of a externalReferences relationship on an existing deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Patch_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deals"
        ],
        "summary": "Removes a deal from a to-many relationship with externalReferences",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Delete_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/contacts": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a contacts related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deals"
        ],
        "summary": "Adds contacts to a to-many relationship with an existing deal",
        "description": "Where `id` is the identifier of the primary deal resource",
        "operationId": "DealRelationship_Post_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Deals"
        ],
        "summary": "Performs a complete replacement of a contacts relationship on an existing deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Patch_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deals"
        ],
        "summary": "Removes a deal from a to-many relationship with contacts",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Delete_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/importantDates": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a importantDates related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_DealImportantDates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_DealImportantDates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deals"
        ],
        "summary": "Adds importantDates to a to-many relationship with an existing deal",
        "description": "Where `id` is the identifier of the primary deal resource",
        "operationId": "DealRelationship_Post_DealImportantDates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Deals"
        ],
        "summary": "Performs a complete replacement of a importantDates relationship on an existing deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Patch_DealImportantDates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deals"
        ],
        "summary": "Removes a deal from a to-many relationship with importantDates",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Delete_DealImportantDates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/dealStructures": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a dealStructures related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_DealStructures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_DealStructures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deals"
        ],
        "summary": "Adds dealStructures to a to-many relationship with an existing deal",
        "description": "Where `id` is the identifier of the primary deal resource",
        "operationId": "DealRelationship_Post_DealStructures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Deals"
        ],
        "summary": "Performs a complete replacement of a dealStructures relationship on an existing deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Patch_DealStructures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deals"
        ],
        "summary": "Removes a deal from a to-many relationship with dealStructures",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Delete_DealStructures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/adviser": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a advisers related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deals"
        ],
        "summary": "Adds advisers to a to-many relationship with an existing deal",
        "description": "Where `id` is the identifier of the primary deal resource",
        "operationId": "DealRelationship_Post_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Deals"
        ],
        "summary": "Performs a complete replacement of a adviser relationship on an existing deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Patch_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deals"
        ],
        "summary": "Removes a deal from a to-many relationship with advisers",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Delete_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/dealNotes": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a dealNotes related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_DealNotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_DealNotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Deals"
        ],
        "summary": "Adds dealNotes to a to-many relationship with an existing deal",
        "description": "Where `id` is the identifier of the primary deal resource",
        "operationId": "DealRelationship_Post_DealNotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Deals"
        ],
        "summary": "Performs a complete replacement of a dealNotes relationship on an existing deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Patch_DealNotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deals"
        ],
        "summary": "Removes a deal from a to-many relationship with dealNotes",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Delete_DealNotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/integrations/{id}/dealExternalReferences": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Gets dealExternalReferences via a single related integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelated_Get_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealExternalReferencesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Integrations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IntegrationRelated_Head_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/integrations/{id}/relationships/dealExternalReferences": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Gets a dealExternalReferences related to a single integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelationship_Get_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Integrations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IntegrationRelationship_Get_Head_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Adds dealExternalReferences to a to-many relationship with an existing integration",
        "description": "Where `id` is the identifier of the primary integration resource",
        "operationId": "IntegrationRelationship_Post_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Integrations"
        ],
        "summary": "Performs a complete replacement of a dealExternalReferences relationship on an existing integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelationship_Patch_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Integrations"
        ],
        "summary": "Removes a integration from a to-many relationship with dealExternalReferences",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelationship_Delete_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "addressDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactAddress"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressType": {
        "enum": [
          "CurrentAddress",
          "PostalAddress",
          "PostSettlementAddress",
          "PreviousAddress",
          "Other"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "AddressType",
          "modelAsString": true
        }
      },
      "Adviser": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AdvisersEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AdviserAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/AdviserRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AdviserAttributes": {
        "type": "object",
        "properties": {
          "googlePlaces": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "myLeadGenActivationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "isMyLeadGenActive": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "bio": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "jobTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "Status": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "email": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "skype": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "facebook": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "linkedIn": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "twitter": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "youtubeFeatured": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "calendly": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "myLeadGenerator": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "youtubeChannel": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdviserDetail": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AdviserDetailsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AdviserDetailAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/AdviserDetailRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AdviserDetailAttributes": {
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "placeOfBirth": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "preferredName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "businessPhone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthCountry": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fax": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "workEmail": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdviserDetailDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AdviserDetail"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdviserDetailRelationships": {
        "type": "object",
        "properties": {
          "adviser": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "AdviserDetailsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdviserDetail"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdviserDetailsEntityType": {
        "enum": [
          "adviser-details"
        ],
        "type": "string"
      },
      "AdviserDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Adviser"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdviserRelationships": {
        "type": "object",
        "properties": {
          "adviserDetails": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "organisation": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "contactGroups": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "AdvisersDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Adviser"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdvisersEntityType": {
        "enum": [
          "advisers"
        ],
        "type": "string"
      },
      "ApiAddressClientEntity": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "addressDetails": {
            "$ref": "#/components/schemas/ContactAddress"
          }
        },
        "additionalProperties": false
      },
      "ApiAdviserProfile": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "jobTitle": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "bio": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "adviser": {
            "$ref": "#/components/schemas/Adviser"
          }
        },
        "additionalProperties": false
      },
      "ApiFamilySocialMedia": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "linkedInUrl": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "facebookUrl": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "googleMyBusinessUrl": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "youtubeUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "twitterUrl": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ClientAddressType": {
        "enum": [
          "Current",
          "Postal",
          "PostSettlement",
          "Previous",
          "Other"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "ClientAddressType",
          "modelAsString": true
        }
      },
      "Contact": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ContactAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ContactRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ContactAddress": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactAddressEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ContactAddressAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ContactAddressRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ContactAddressAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "addressType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressType"
              }
            ]
          },
          "streetAddress": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "country": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "suburb": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "postCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactAddressDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ContactAddress"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactAddressEntityType": {
        "enum": [
          "contact-address"
        ],
        "type": "string"
      },
      "ContactAddressesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactAddress"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactAddressRelationships": {
        "type": "object",
        "properties": {
          "contactAddress": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "ContactAttributes": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "mobile": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "preferredName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "hasMarketingConsent": {
            "type": "boolean",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "ContactDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Contact"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactExternalReference": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactExternalReferencesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ContactExternalReferenceAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ContactExternalReferenceRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ContactExternalReferenceAttributes": {
        "type": "object",
        "properties": {
          "externalReference": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ContactExternalReferenceDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ContactExternalReference"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactExternalReferenceRelationships": {
        "type": "object",
        "properties": {
          "integration": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "contact": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "ContactExternalReferencesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactExternalReference"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactExternalReferencesEntityType": {
        "enum": [
          "contact-external-references"
        ],
        "type": "string"
      },
      "ContactGroup": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactGroupsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ContactGroupAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ContactGroupRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ContactGroupAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "utmSource": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "utmMedium": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "utmTerm": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "utmContent": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "utmCampaign": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContactGroupDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ContactGroup"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactGroupReferrer": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactGroupReferrersEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ContactGroupReferrerAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ContactGroupReferrerRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ContactGroupReferrerAttributes": {
        "type": "object",
        "properties": {
          "referrerOrganizationName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "referrerName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactGroupReferrerDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ContactGroupReferrer"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactGroupReferrerRelationships": {
        "type": "object"
      },
      "ContactGroupReferrersDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactGroupReferrer"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactGroupReferrersEntityType": {
        "enum": [
          "contact-group-referrers"
        ],
        "type": "string"
      },
      "ContactGroupRelationships": {
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "adviser": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "referrerOrganization": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "referrer": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "ContactGroupsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactGroup"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactGroupsEntityType": {
        "enum": [
          "contact-groups"
        ],
        "type": "string"
      },
      "ContactMarketing": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactMarketingEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ContactMarketingAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ContactMarketingRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ContactMarketingAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "hasMarketingConsent": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ContactMarketingDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ContactMarketing"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactMarketingEntityType": {
        "enum": [
          "contact-marketing"
        ],
        "type": "string"
      },
      "ContactMarketingRelationships": {
        "type": "object"
      },
      "ContactMarketingsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactMarketing"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactRelationships": {
        "type": "object",
        "properties": {
          "contactGroup": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "externalReferences": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "deals": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "contactAddress": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "ContactsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactsEntityType": {
        "enum": [
          "contacts"
        ],
        "type": "string"
      },
      "Deal": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "dates": {
            "$ref": "#/components/schemas/ImportantDatesSet"
          },
          "totalLoanAmount": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "customStatusName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "dealType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/DealType"
              }
            ]
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dealStatus": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemStatus"
              }
            ],
            "readOnly": true
          },
          "opportunity": {
            "$ref": "#/components/schemas/Opportunity"
          },
          "splits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Split"
            },
            "nullable": true,
            "readOnly": true
          },
          "lenderName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Deal"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealExternalReference": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealExternalReferencesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealExternalReferenceAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealExternalReferenceRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealExternalReferenceAttributes": {
        "type": "object",
        "properties": {
          "externalReference": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "DealExternalReferenceDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealExternalReference"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealExternalReferenceRelationships": {
        "type": "object",
        "properties": {
          "integration": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "deal": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealExternalReferencesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealExternalReference"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealExternalReferencesEntityType": {
        "enum": [
          "deal-external-references"
        ],
        "type": "string"
      },
      "DealImportantDate": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealImportantDatesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealImportantDateAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealImportantDateRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealImportantDateAttributes": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "readOnly": true
          },
          "dateType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImportantDate"
              }
            ],
            "readOnly": true
          }
        }
      },
      "DealImportantDateDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealImportantDate"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealImportantDateRelationships": {
        "type": "object",
        "properties": {
          "deal": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealImportantDatesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealImportantDate"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealImportantDatesEntityType": {
        "enum": [
          "deal-important-dates"
        ],
        "type": "string"
      },
      "DealNote": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealNotesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealNoteAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealNoteRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealNoteAttributes": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DealNoteDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealNote"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealNoteRelationships": {
        "type": "object",
        "properties": {
          "deal": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealNotesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealNote"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealNotesEntityType": {
        "enum": [
          "deal-notes"
        ],
        "type": "string"
      },
      "DealParticipant": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealParticipantsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealParticipantAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealParticipantRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealParticipantAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "isApplicant": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "isDependent": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "isGuarantor": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealParticipantDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealParticipant"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealParticipantRelationships": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "deal": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealParticipantsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealParticipant"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealParticipantsEntityType": {
        "enum": [
          "deal-participants"
        ],
        "type": "string"
      },
      "DealRelationships": {
        "type": "object",
        "properties": {
          "dealScenario": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "participants": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "externalReferences": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "dealStructures": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "contacts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            ],
            "writeOnly": true
          },
          "importantDates": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "adviser": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "dealNotes": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "DealScenario": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealScenarioEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealScenarioAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealScenarioRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealScenarioAttributes": {
        "type": "object"
      },
      "DealScenarioDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealScenario"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealScenarioEntityType": {
        "enum": [
          "deal-scenario"
        ],
        "type": "string"
      },
      "DealScenarioRelationships": {
        "type": "object",
        "properties": {
          "highLevelSummary": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealScenariosDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealScenario"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Deal"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealsEntityType": {
        "enum": [
          "deals"
        ],
        "type": "string"
      },
      "DealStructure": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealStructuresEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealStructureAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealStructureRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealStructureAttributes": {
        "type": "object",
        "properties": {
          "fixedRateBeginDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "readOnly": true
          },
          "rateTypePeriodMonths": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "loanStructureType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/LoanStructureType"
              }
            ]
          },
          "interestRate": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "rateType": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "paymentAmount": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "interestOnlyExpiryDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "readOnly": true
          },
          "loanTermYears": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "fixedRateExpiryDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealStructureDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealStructure"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealStructureImportantDate": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealStructureImportantDatesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealStructureImportantDateAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealStructureImportantDateRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealStructureImportantDateAttributes": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "readOnly": true
          },
          "dateType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/LoanStructureImportantDateTypes"
              }
            ],
            "readOnly": true
          },
          "finishDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealStructureImportantDateDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealStructureImportantDate"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealStructureImportantDateRelationships": {
        "type": "object",
        "properties": {
          "dealStructure": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealStructureImportantDatesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealStructureImportantDate"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealStructureImportantDatesEntityType": {
        "enum": [
          "deal-structure-important-dates"
        ],
        "type": "string"
      },
      "DealStructureRelationships": {
        "type": "object",
        "properties": {
          "dealImportantDates": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "deal": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealStructuresDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealStructure"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealStructuresEntityType": {
        "enum": [
          "deal-structures"
        ],
        "type": "string"
      },
      "DealType": {
        "enum": [
          "Residential",
          "Commercial",
          "SmallBusiness",
          "AssetFinance",
          "PersonalLoan",
          "DepositBond"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "DealType",
          "modelAsString": true
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "$ref": "#/components/schemas/ErrorLinks"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/ErrorSource"
          },
          "meta": {
            "$ref": "#/components/schemas/ErrorMeta"
          }
        },
        "additionalProperties": false
      },
      "ErrorDocument": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ErrorLinks": {
        "type": "object",
        "properties": {
          "about": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorMeta": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ErrorSource": {
        "type": "object",
        "properties": {
          "pointer": {
            "type": "string",
            "nullable": true
          },
          "parameter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gender": {
        "enum": [
          "Male",
          "Female",
          "Undisclosed"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "Gender",
          "modelAsString": true
        }
      },
      "HighLevelSummariesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighLevelSummary"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "HighLevelSummary": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/HighLevelSummaryEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/HighLevelSummaryAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/HighLevelSummaryRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HighLevelSummaryAttributes": {
        "type": "object",
        "properties": {
          "proposedLoanAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "securityAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "summaryNotes": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        }
      },
      "HighLevelSummaryDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/HighLevelSummary"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "HighLevelSummaryEntityType": {
        "enum": [
          "high-level-summary"
        ],
        "type": "string"
      },
      "HighLevelSummaryRelationships": {
        "type": "object",
        "properties": {
          "dealScenario": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "ImportantDate": {
        "enum": [
          "Settled",
          "FinanceClause",
          "NotProceeding",
          "Lodged",
          "PreApproved",
          "ConditionallyApproved",
          "Approved",
          "PreApprovedExpiry",
          "EstimatedSettled"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "ImportantDate",
          "modelAsString": true
        }
      },
      "ImportantDatesSet": {
        "type": "object",
        "properties": {
          "settled": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "lodged": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "financeClause": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "notProceeding": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "approved": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "preApproved": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "conditionallyApproved": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "preApprovedExpiry": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "estimatedSettled": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IncludedResource": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "contact-address": "#/components/schemas/ContactAddress",
            "organisation-addresses": "#/components/schemas/OrganisationAddress",
            "high-level-summary": "#/components/schemas/HighLevelSummary",
            "deal-scenario": "#/components/schemas/DealScenario",
            "deal-participants": "#/components/schemas/DealParticipant",
            "deal-important-dates": "#/components/schemas/DealImportantDate",
            "deal-structure-important-dates": "#/components/schemas/DealStructureImportantDate",
            "deal-structures": "#/components/schemas/DealStructure",
            "adviser-details": "#/components/schemas/AdviserDetail",
            "advisers": "#/components/schemas/Adviser",
            "deal-notes": "#/components/schemas/DealNote",
            "deals": "#/components/schemas/Deal",
            "deal-external-references": "#/components/schemas/DealExternalReference",
            "integrations": "#/components/schemas/Integration",
            "organisations": "#/components/schemas/Organisation",
            "referrer-organization": "#/components/schemas/ReferrerOrganization",
            "referrer": "#/components/schemas/Referrer",
            "contact-groups": "#/components/schemas/ContactGroup",
            "contacts": "#/components/schemas/Contact",
            "contact-external-references": "#/components/schemas/ContactExternalReference",
            "contact-marketing": "#/components/schemas/ContactMarketing",
            "leads": "#/components/schemas/Lead",
            "contact-group-referrers": "#/components/schemas/ContactGroupReferrer"
          }
        }
      },
      "Integration": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/IntegrationsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/IntegrationAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/IntegrationRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IntegrationAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        }
      },
      "IntegrationDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Integration"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "IntegrationRelationships": {
        "type": "object",
        "properties": {
          "contactExternalReferences": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "dealExternalReferences": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "IntegrationsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "IntegrationsEntityType": {
        "enum": [
          "integrations"
        ],
        "type": "string"
      },
      "Lead": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/LeadsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/LeadAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/LeadRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LeadAttributes": {
        "type": "object",
        "properties": {
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "writeOnly": true
          },
          "title": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/Title"
              }
            ],
            "writeOnly": true
          },
          "firstName": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "preferredName": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "email": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "mobile": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "gender": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ],
            "writeOnly": true
          },
          "hasMarketingConsent": {
            "type": "boolean",
            "nullable": true,
            "writeOnly": true
          },
          "isGuarantor": {
            "type": "boolean",
            "nullable": true,
            "writeOnly": true
          },
          "isDependant": {
            "type": "boolean",
            "nullable": true,
            "writeOnly": true
          },
          "isPrimary": {
            "type": "boolean",
            "nullable": true,
            "writeOnly": true
          },
          "streetAddress": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "suburb": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "state": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "postCode": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "country": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "addressType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClientAddressType"
              }
            ],
            "writeOnly": true
          },
          "noteTitle": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "noteDetails": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmSource": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmMedium": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmCampaign": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmTerm": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmContent": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "sourceSystemUrl": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "customStatusName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "dealStatus": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemStatus"
              }
            ],
            "readOnly": true
          }
        }
      },
      "LeadDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Lead"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "LeadRelationships": {
        "type": "object"
      },
      "LeadsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Lead"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "LeadsEntityType": {
        "enum": [
          "leads"
        ],
        "type": "string"
      },
      "LoanStructureImportantDateTypes": {
        "enum": [
          "InterestOnly",
          "RepaymentHoliday"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "LoanStructureImportantDateTypes",
          "modelAsString": true
        }
      },
      "LoanStructureType": {
        "enum": [
          "PrincipalInterest",
          "InterestOnly",
          "RevolvingCredit",
          "Offset"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "LoanStructureType",
          "modelAsString": true
        }
      },
      "Opportunity": {
        "type": "object",
        "properties": {
          "proposedLoanAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "securityAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "summaryNotes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Organisation": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/OrganisationsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/OrganisationAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/OrganisationRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationAddress": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/OrganisationAddressesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/OrganisationAddressAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/OrganisationAddressRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationAddressAttributes": {
        "type": "object",
        "properties": {
          "isMailing": {
            "type": "boolean",
            "nullable": true
          },
          "isCustomAddress": {
            "type": "boolean",
            "nullable": true
          },
          "streetAddress": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "country": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "suburb": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "postCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OrganisationAddressDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/OrganisationAddress"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OrganisationAddressesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationAddress"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OrganisationAddressesEntityType": {
        "enum": [
          "organisation-addresses"
        ],
        "type": "string"
      },
      "OrganisationAddressRelationships": {
        "type": "object"
      },
      "OrganisationAttributes": {
        "type": "object",
        "properties": {
          "emailForCommissions": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "primaryBrandColour": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "tradingName": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "website": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "companyEmail": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "brandedCategory": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "abn": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "acn": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "officeDisplayName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fax": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OrganisationDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Organisation"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OrganisationRelationships": {
        "type": "object",
        "properties": {
          "advisers": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "addresses": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "OrganisationsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organisation"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OrganisationsEntityType": {
        "enum": [
          "organisations"
        ],
        "type": "string"
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Referrer": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ReferrerEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ReferrerAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ReferrerRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ReferrerAttributes": {
        "type": "object",
        "properties": {
          "referrerName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        }
      },
      "ReferrerDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Referrer"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ReferrerEntityType": {
        "enum": [
          "referrer"
        ],
        "type": "string"
      },
      "ReferrerOrganization": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ReferrerOrganizationEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ReferrerOrganizationAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ReferrerOrganizationRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ReferrerOrganizationAttributes": {
        "type": "object",
        "properties": {
          "referrerOrgName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        }
      },
      "ReferrerOrganizationDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ReferrerOrganization"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ReferrerOrganizationEntityType": {
        "enum": [
          "referrer-organization"
        ],
        "type": "string"
      },
      "ReferrerOrganizationRelationships": {
        "type": "object",
        "properties": {
          "contactGroups": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "ReferrerOrganizationsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferrerOrganization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ReferrerRelationships": {
        "type": "object",
        "properties": {
          "contactGroups": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "ReferrersDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Referrer"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "RelationshipLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "nullable": true
          },
          "related": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipsMultipleDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationshipLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceIdentifier"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipsSingleDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationshipLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ResourceIdentifier"
          }
        },
        "additionalProperties": false
      },
      "ResourceIdentifier": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ResourceLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Split": {
        "type": "object",
        "properties": {
          "loanTermYears": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rateType": {
            "type": "string",
            "nullable": true
          },
          "loanStructureType": {
            "$ref": "#/components/schemas/LoanStructureType"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "interestRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rateTypePeriodMonths": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "fixedRateStartDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "fixedRateEndDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "interestOnlyStartDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "interestOnlyEndDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "repaymentHolidayStartDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "repaymentHolidayEndDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SystemStatus": {
        "enum": [
          "NewLeads",
          "Researching",
          "PreApproved",
          "ConditionallyApproved",
          "UnconditionallyApproved",
          "Lodged",
          "InProgress",
          "PendingSettlement",
          "Varied",
          "Repaid",
          "Withdrawn",
          "Cancelled",
          "Settled"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "SystemStatus",
          "modelAsString": true
        }
      },
      "Title": {
        "enum": [
          "Mr",
          "Mrs",
          "Ms",
          "Miss",
          "Master",
          "Dr"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "Title",
          "modelAsString": true
        }
      },
      "TopLevelLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "nullable": true
          },
          "related": {
            "type": "string",
            "nullable": true
          },
          "describedBy": {
            "type": "string",
            "nullable": true
          },
          "first": {
            "type": "string",
            "nullable": true
          },
          "last": {
            "type": "string",
            "nullable": true
          },
          "prev": {
            "type": "string",
            "nullable": true
          },
          "next": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkbenchLogType": {
        "enum": [
          "Email",
          "Mail",
          "Notes",
          "RequirementAdd",
          "RequirementCompleted",
          "RequirementUnticked",
          "RequirementUpdated",
          "RequirementDeleted",
          "NextWorkDate"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "WorkbenchLogType",
          "modelAsString": true
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT authorization header using the Bearer scheme.",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}