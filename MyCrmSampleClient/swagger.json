{
  "openapi": "3.0.1",
  "info": {
    "title": "MyCRM API",
    "version": "v1"
  },
  "paths": {
    "/jsonapi/advisers": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets a collection of advisers",
        "operationId": "Advisers_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Adviser"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Advisers_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/advisers/{id}": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets a single adviser by id",
        "description": "Where `id` is the identifier of the adviser",
        "operationId": "Adviser_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdviserDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Adviser"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Adviser_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/advisers/{id}/relationships/contactGroups": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets a contactGroups related to a single adviser",
        "description": "Where `id` is the identifier of the adviser",
        "operationId": "AdviserRelationship_Get_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Adviser"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserRelationship_Get_Head_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/adviser-details/{id}/adviser": {
      "get": {
        "tags": [
          "AdviserDetails"
        ],
        "summary": "Gets advisers via a single related adviser detail",
        "description": "Where `id` is the identifier of the adviser detail",
        "operationId": "AdviserDetailRelated_Get_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AdviserDetails"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserDetailRelated_Head_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/adviser-details": {
      "get": {
        "tags": [
          "AdviserDetails"
        ],
        "summary": "Gets a collection of adviser details",
        "operationId": "AdviserDetails_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdviserDetailsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AdviserDetails"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserDetails_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/adviser-details/{id}": {
      "get": {
        "tags": [
          "AdviserDetails"
        ],
        "summary": "Gets a single adviser detail by id",
        "description": "Where `id` is the identifier of the adviser detail",
        "operationId": "AdviserDetail_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdviserDetailDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AdviserDetails"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserDetail_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/adviser-details/{id}/relationships/adviser": {
      "get": {
        "tags": [
          "AdviserDetails"
        ],
        "summary": "Gets a advisers related to a single adviser detail",
        "description": "Where `id` is the identifier of the adviser detail",
        "operationId": "AdviserDetailRelationship_Get_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AdviserDetails"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserDetailRelationship_Get_Head_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/assets/{id}/ownership": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Gets ownerships via a single related asset",
        "description": "Where `id` is the identifier of the asset",
        "operationId": "AssetRelated_Get_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetRelated_Head_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/asset-categories": {
      "get": {
        "tags": [
          "AssetCategories"
        ],
        "summary": "Gets a collection of asset categories",
        "operationId": "AssetCategories_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetCategoriesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AssetCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetCategories_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/asset-categories/{id}": {
      "get": {
        "tags": [
          "AssetCategories"
        ],
        "summary": "Gets a single asset category by id",
        "description": "Where `id` is the identifier of the asset category",
        "operationId": "AssetCategory_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetCategoryDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AssetCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetCategory_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/asset-categories/{id}/{relationshipName}": {
      "get": {
        "tags": [
          "AssetCategories"
        ],
        "summary": "Gets {{{RelationshipNames}}} via a single related asset category",
        "description": "Where `id` is the identifier of the asset category",
        "operationId": "AssetCategoryRelated_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AssetCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetCategoryRelated_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/asset-categories/{id}/relationships/{relationshipName}": {
      "get": {
        "tags": [
          "AssetCategories"
        ],
        "summary": "Gets a {{{RelationshipNames}}} related to a single asset category",
        "description": "Where `id` is the identifier of the asset category",
        "operationId": "AssetCategoryRelationship_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AssetCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetCategoryRelationship_Get_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/assets": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Gets a collection of assets",
        "operationId": "Assets_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Assets_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/assets/{id}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Gets a single asset by id",
        "description": "Where `id` is the identifier of the asset",
        "operationId": "Asset_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Asset_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/assets/{id}/relationships/ownership": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Gets a ownerships related to a single asset",
        "description": "Where `id` is the identifier of the asset",
        "operationId": "AssetRelationship_Get_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetRelationship_Get_Head_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-external-references/{id}/contact": {
      "get": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Gets contacts via a single related contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelated_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactExternalReferenceRelated_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/asset-sub-types": {
      "get": {
        "tags": [
          "AssetSubTypes"
        ],
        "summary": "Gets a collection of asset sub-types",
        "operationId": "AssetSubTypes_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetSubTypesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AssetSubTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetSubTypes_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/asset-sub-types/{id}": {
      "get": {
        "tags": [
          "AssetSubTypes"
        ],
        "summary": "Gets a single asset sub-type by id",
        "description": "Where `id` is the identifier of the asset sub-type",
        "operationId": "AssetSubType_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetSubTypeDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AssetSubTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetSubType_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/asset-sub-types/{id}/{relationshipName}": {
      "get": {
        "tags": [
          "AssetSubTypes"
        ],
        "summary": "Gets {{{RelationshipNames}}} via a single related asset sub-type",
        "description": "Where `id` is the identifier of the asset sub-type",
        "operationId": "AssetSubTypeRelated_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AssetSubTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetSubTypeRelated_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/asset-sub-types/{id}/relationships/{relationshipName}": {
      "get": {
        "tags": [
          "AssetSubTypes"
        ],
        "summary": "Gets a {{{RelationshipNames}}} related to a single asset sub-type",
        "description": "Where `id` is the identifier of the asset sub-type",
        "operationId": "AssetSubTypeRelationship_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AssetSubTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetSubTypeRelationship_Get_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/asset-types": {
      "get": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Gets a collection of asset types",
        "operationId": "AssetTypes_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTypesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetTypes_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/asset-types/{id}": {
      "get": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Gets a single asset type by id",
        "description": "Where `id` is the identifier of the asset type",
        "operationId": "AssetType_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetTypeDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetType_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/asset-types/{id}/{relationshipName}": {
      "get": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Gets {{{RelationshipNames}}} via a single related asset type",
        "description": "Where `id` is the identifier of the asset type",
        "operationId": "AssetTypeRelated_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetTypeRelated_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/asset-types/{id}/relationships/{relationshipName}": {
      "get": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Gets a {{{RelationshipNames}}} related to a single asset type",
        "description": "Where `id` is the identifier of the asset type",
        "operationId": "AssetTypeRelationship_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "AssetTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetTypeRelationship_Get_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-external-references": {
      "get": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Gets a collection of external references of contacts",
        "operationId": "ContactExternalReferences_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactExternalReferencesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactExternalReferences_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Creates a new contact external reference with attributes, relationships or both",
        "operationId": "ContactExternalReference_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactExternalReferenceDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactExternalReferenceDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-external-references/{id}": {
      "get": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Gets a single contact external reference by id",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReference_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactExternalReferenceDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactExternalReference_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Updates the attributes and/or relationships of an existing contact external reference. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReference_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactExternalReferenceDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactExternalReferenceDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Deletes an existing contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReference_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-external-references/{id}/relationships/contact": {
      "get": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Gets a contacts related to a single contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelationship_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactExternalReferenceRelationship_Get_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Adds contacts to a to-many relationship with an existing contact external reference",
        "description": "Where `id` is the identifier of the primary contact external reference resource",
        "operationId": "ContactExternalReferenceRelationship_Post_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Performs a complete replacement of a contact relationship on an existing contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelationship_Patch_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Removes a contact external reference from a to-many relationship with contacts",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelationship_Delete_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/businesses": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets businesses via a single related contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelated_Get_Businesses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelated_Head_Businesses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets a collection of contact groups",
        "operationId": "ContactGroups_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroups_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Creates a new contact group with attributes, relationships or both",
        "operationId": "ContactGroup_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets a single contact group by id",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroup_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroup_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Updates the attributes and/or relationships of an existing contact group. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroup_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Deletes an existing contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroup_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/relationships/businesses": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets a businesses related to a single contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Get_Businesses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelationship_Get_Head_Businesses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Adds businesses to a to-many relationship with an existing contact group",
        "description": "Where `id` is the identifier of the primary contact group resource",
        "operationId": "ContactGroupRelationship_Post_Businesses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Performs a complete replacement of a businesses relationship on an existing contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Patch_Businesses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Removes a contact group from a to-many relationship with businesses",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Delete_Businesses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/contactGroup": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets contactGroups via a single related contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelated_Get_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelated_Head_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-marketing/{id}": {
      "patch": {
        "tags": [
          "ContactMarketingConsent"
        ],
        "summary": "Updates the marketing consent declaration of an existing contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactMarketing_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMarketingDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactMarketingDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ContactMarketingConsent"
        ],
        "summary": "Gets the marketing consent declaration of a single contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactMarketing_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactMarketingDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Creates a new contact with attributes, relationships or both",
        "operationId": "Contact_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets a collection of contacts",
        "operationId": "Contacts_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Contacts_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}": {
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Updates the attributes and/or relationships of an existing contact. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "Contact_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets a single contact by id",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "Contact_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Contact_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Deletes an existing contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "Contact_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/relationships/contactGroup": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets a contactGroups related to a single contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Get_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelationship_Get_Head_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Adds contactGroups to a to-many relationship with an existing contact",
        "description": "Where `id` is the identifier of the primary contact resource",
        "operationId": "ContactRelationship_Post_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Performs a complete replacement of a contactGroup relationship on an existing contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Patch_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Removes a contact from a to-many relationship with contactGroups",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Delete_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-external-references/{id}/deal": {
      "get": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Gets deals via a single related deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelated_Get_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealExternalReferenceRelated_Head_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-external-references": {
      "get": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Gets a collection of external references of deals",
        "operationId": "DealExternalReferences_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealExternalReferencesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealExternalReferences_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Creates a new deal external reference with attributes, relationships or both",
        "operationId": "DealExternalReference_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DealExternalReferenceDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealExternalReferenceDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-external-references/{id}": {
      "get": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Gets a single deal external reference by id",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReference_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealExternalReferenceDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealExternalReference_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Updates the attributes and/or relationships of an existing deal external reference. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReference_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DealExternalReferenceDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealExternalReferenceDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Deletes an existing deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReference_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-external-references/{id}/relationships/deal": {
      "get": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Gets a deals related to a single deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelationship_Get_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealExternalReferenceRelationship_Get_Head_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Adds deals to a to-many relationship with an existing deal external reference",
        "description": "Where `id` is the identifier of the primary deal external reference resource",
        "operationId": "DealExternalReferenceRelationship_Post_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Performs a complete replacement of a deal relationship on an existing deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelationship_Patch_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Removes a deal external reference from a to-many relationship with deals",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelationship_Delete_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-participants/{id}/contact": {
      "get": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Gets contacts via a single related participants in a deal",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipantRelated_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealParticipantRelated_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-participants": {
      "get": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Gets a collection of participants in deals",
        "operationId": "DealParticipants_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealParticipantsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealParticipants_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-participants/{id}": {
      "get": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Gets a single participants in a deal by id",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipant_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealParticipantDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealParticipant_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-participants/{id}/relationships/contact": {
      "get": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Gets a contacts related to a single participants in a deal",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipantRelationship_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealParticipantRelationship_Get_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/dealScenario": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets dealScenarios via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_DealScenarios",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealScenariosDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_DealScenarios",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a collection of deals",
        "operationId": "Deals_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Deals_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a single deal by id",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "Deal_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Deal_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/dealScenario": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a dealScenarios related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_DealScenarios",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_DealScenarios",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/expense-categories/{id}/expenseTypes": {
      "get": {
        "tags": [
          "ExpenseCategories"
        ],
        "summary": "Gets expenseTypes via a single related expense category",
        "description": "Where `id` is the identifier of the expense category",
        "operationId": "ExpenseCategoryRelated_Get_ExpenseTypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseTypesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ExpenseCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ExpenseCategoryRelated_Head_ExpenseTypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/expense-categories": {
      "get": {
        "tags": [
          "ExpenseCategories"
        ],
        "summary": "Gets a collection of expense categories",
        "operationId": "ExpenseCategories_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategoriesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ExpenseCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ExpenseCategories_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/expense-categories/{id}": {
      "get": {
        "tags": [
          "ExpenseCategories"
        ],
        "summary": "Gets a single expense category by id",
        "description": "Where `id` is the identifier of the expense category",
        "operationId": "ExpenseCategory_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategoryDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ExpenseCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ExpenseCategory_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/expense-categories/{id}/relationships/expenseTypes": {
      "get": {
        "tags": [
          "ExpenseCategories"
        ],
        "summary": "Gets a expenseTypes related to a single expense category",
        "description": "Where `id` is the identifier of the expense category",
        "operationId": "ExpenseCategoryRelationship_Get_ExpenseTypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ExpenseCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ExpenseCategoryRelationship_Get_Head_ExpenseTypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/expenses/{id}/ownership": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Gets ownerships via a single related expense",
        "description": "Where `id` is the identifier of the expense",
        "operationId": "ExpenseRelated_Get_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Expenses"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ExpenseRelated_Head_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/expenses": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Gets a collection of expenses",
        "operationId": "Expenses_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpensesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Expenses"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Expenses_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/expenses/{id}": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Gets a single expense by id",
        "description": "Where `id` is the identifier of the expense",
        "operationId": "Expense_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Expenses"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Expense_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/expenses/{id}/relationships/ownership": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Gets a ownerships related to a single expense",
        "description": "Where `id` is the identifier of the expense",
        "operationId": "ExpenseRelationship_Get_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Expenses"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ExpenseRelationship_Get_Head_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/expense-types/{id}/expenseCategory": {
      "get": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Gets expenseCategories via a single related expense type",
        "description": "Where `id` is the identifier of the expense type",
        "operationId": "ExpenseTypeRelated_Get_ExpenseCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseCategoriesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ExpenseTypeRelated_Head_ExpenseCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/expense-types": {
      "get": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Gets a collection of expense types",
        "operationId": "ExpenseTypes_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseTypesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ExpenseTypes_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/expense-types/{id}": {
      "get": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Gets a single expense type by id",
        "description": "Where `id` is the identifier of the expense type",
        "operationId": "ExpenseType_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseTypeDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ExpenseType_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/expense-types/{id}/relationships/expenseCategory": {
      "get": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Gets a expenseCategories related to a single expense type",
        "description": "Where `id` is the identifier of the expense type",
        "operationId": "ExpenseTypeRelationship_Get_ExpenseCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ExpenseTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ExpenseTypeRelationship_Get_Head_ExpenseCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/income-categories/{id}/incomeTypes": {
      "get": {
        "tags": [
          "IncomeCategories"
        ],
        "summary": "Gets incomeTypes via a single related income category",
        "description": "Where `id` is the identifier of the income category",
        "operationId": "IncomeCategoryRelated_Get_IncomeTypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomeTypesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "IncomeCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IncomeCategoryRelated_Head_IncomeTypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/income-categories": {
      "get": {
        "tags": [
          "IncomeCategories"
        ],
        "summary": "Gets a collection of income categories",
        "operationId": "IncomeCategories_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomeCategoriesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "IncomeCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IncomeCategories_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/income-categories/{id}": {
      "get": {
        "tags": [
          "IncomeCategories"
        ],
        "summary": "Gets a single income category by id",
        "description": "Where `id` is the identifier of the income category",
        "operationId": "IncomeCategory_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomeCategoryDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "IncomeCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IncomeCategory_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/income-categories/{id}/relationships/incomeTypes": {
      "get": {
        "tags": [
          "IncomeCategories"
        ],
        "summary": "Gets a incomeTypes related to a single income category",
        "description": "Where `id` is the identifier of the income category",
        "operationId": "IncomeCategoryRelationship_Get_IncomeTypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "IncomeCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IncomeCategoryRelationship_Get_Head_IncomeTypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/incomes/{id}/linkedAsset": {
      "get": {
        "tags": [
          "Incomes"
        ],
        "summary": "Gets linkedAssets via a single related income",
        "description": "Where `id` is the identifier of the income",
        "operationId": "IncomeRelated_Get_Assets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Incomes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IncomeRelated_Head_Assets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/incomes": {
      "get": {
        "tags": [
          "Incomes"
        ],
        "summary": "Gets a collection of incomes",
        "operationId": "Incomes_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Incomes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Incomes_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/incomes/{id}": {
      "get": {
        "tags": [
          "Incomes"
        ],
        "summary": "Gets a single income by id",
        "description": "Where `id` is the identifier of the income",
        "operationId": "Income_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomeDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Incomes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Income_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/incomes/{id}/relationships/linkedAsset": {
      "get": {
        "tags": [
          "Incomes"
        ],
        "summary": "Gets a linkedAssets related to a single income",
        "description": "Where `id` is the identifier of the income",
        "operationId": "IncomeRelationship_Get_Assets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Incomes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IncomeRelationship_Get_Head_Assets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/income-types/{id}/incomeCategory": {
      "get": {
        "tags": [
          "IncomeTypes"
        ],
        "summary": "Gets incomeCategories via a single related income type",
        "description": "Where `id` is the identifier of the income type",
        "operationId": "IncomeTypeRelated_Get_IncomeCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomeCategoriesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "IncomeTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IncomeTypeRelated_Head_IncomeCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/income-types": {
      "get": {
        "tags": [
          "IncomeTypes"
        ],
        "summary": "Gets a collection of income types",
        "operationId": "IncomeTypes_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomeTypesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "IncomeTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IncomeTypes_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/income-types/{id}": {
      "get": {
        "tags": [
          "IncomeTypes"
        ],
        "summary": "Gets a single income type by id",
        "description": "Where `id` is the identifier of the income type",
        "operationId": "IncomeType_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomeTypeDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "IncomeTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IncomeType_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/income-types/{id}/relationships/incomeCategory": {
      "get": {
        "tags": [
          "IncomeTypes"
        ],
        "summary": "Gets a incomeCategories related to a single income type",
        "description": "Where `id` is the identifier of the income type",
        "operationId": "IncomeTypeRelationship_Get_IncomeCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "IncomeTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IncomeTypeRelationship_Get_Head_IncomeCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/integrations/{id}/contactExternalReferences": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Gets contactExternalReferences via a single related integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelated_Get_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactExternalReferencesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Integrations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IntegrationRelated_Head_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/integrations": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Gets a collection of integrations",
        "operationId": "Integrations_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Integrations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Integrations_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Creates a new integration with attributes, relationships or both",
        "operationId": "Integration_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/integrations/{id}": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Gets a single integration by id",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "Integration_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Integrations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Integration_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Integrations"
        ],
        "summary": "Updates the attributes and/or relationships of an existing integration. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "Integration_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Integrations"
        ],
        "summary": "Deletes an existing integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "Integration_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/integrations/{id}/relationships/contactExternalReferences": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Gets a contactExternalReferences related to a single integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelationship_Get_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Integrations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IntegrationRelationship_Get_Head_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Adds contactExternalReferences to a to-many relationship with an existing integration",
        "description": "Where `id` is the identifier of the primary integration resource",
        "operationId": "IntegrationRelationship_Post_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Integrations"
        ],
        "summary": "Performs a complete replacement of a contactExternalReferences relationship on an existing integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelationship_Patch_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Integrations"
        ],
        "summary": "Removes a integration from a to-many relationship with contactExternalReferences",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelationship_Delete_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liabilities/{id}/linkedAsset": {
      "get": {
        "tags": [
          "Liabilities"
        ],
        "summary": "Gets linkedAssets via a single related liabilities",
        "description": "Where `id` is the identifier of the liabilities",
        "operationId": "LiabilityRelated_Get_Assets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Liabilities"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "LiabilityRelated_Head_Assets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/leads": {
      "post": {
        "tags": [
          "Leads"
        ],
        "summary": "Creates a lead, including contact and deal attributes",
        "operationId": "Lead_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/LeadDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/leads/{id}": {
      "get": {
        "tags": [
          "Leads"
        ],
        "summary": "Gets select details if an existing lead",
        "description": "Where `id` is the identifier of the lead",
        "operationId": "Lead_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liabilities": {
      "get": {
        "tags": [
          "Liabilities"
        ],
        "summary": "Gets a collection of liabilities",
        "operationId": "Liabilities_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiabilitiesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Liabilities"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Liabilities_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liabilities/{id}": {
      "get": {
        "tags": [
          "Liabilities"
        ],
        "summary": "Gets a single liabilities by id",
        "description": "Where `id` is the identifier of the liabilities",
        "operationId": "Liability_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiabilityDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Liabilities"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Liability_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liabilities/{id}/relationships/linkedAsset": {
      "get": {
        "tags": [
          "Liabilities"
        ],
        "summary": "Gets a linkedAssets related to a single liabilities",
        "description": "Where `id` is the identifier of the liabilities",
        "operationId": "LiabilityRelationship_Get_Assets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Liabilities"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "LiabilityRelationship_Get_Head_Assets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liability-categories/{id}/liabilityTypes": {
      "get": {
        "tags": [
          "LiabilityCategories"
        ],
        "summary": "Gets liabilityTypes via a single related liability category",
        "description": "Where `id` is the identifier of the liability category",
        "operationId": "LiabilityCategoryRelated_Get_LiabilityTypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiabilityTypesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "LiabilityCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "LiabilityCategoryRelated_Head_LiabilityTypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liability-categories": {
      "get": {
        "tags": [
          "LiabilityCategories"
        ],
        "summary": "Gets a collection of liability categories",
        "operationId": "LiabilityCategories_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiabilityCategoriesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "LiabilityCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "LiabilityCategories_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liability-categories/{id}": {
      "get": {
        "tags": [
          "LiabilityCategories"
        ],
        "summary": "Gets a single liability category by id",
        "description": "Where `id` is the identifier of the liability category",
        "operationId": "LiabilityCategory_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiabilityCategoryDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "LiabilityCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "LiabilityCategory_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liability-categories/{id}/relationships/liabilityTypes": {
      "get": {
        "tags": [
          "LiabilityCategories"
        ],
        "summary": "Gets a liabilityTypes related to a single liability category",
        "description": "Where `id` is the identifier of the liability category",
        "operationId": "LiabilityCategoryRelationship_Get_LiabilityTypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "LiabilityCategories"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "LiabilityCategoryRelationship_Get_Head_LiabilityTypes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liability-types/{id}/liabilityCategory": {
      "get": {
        "tags": [
          "LiabilityTypes"
        ],
        "summary": "Gets liabilityCategories via a single related liability type",
        "description": "Where `id` is the identifier of the liability type",
        "operationId": "LiabilityTypeRelated_Get_LiabilityCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiabilityCategoriesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "LiabilityTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "LiabilityTypeRelated_Head_LiabilityCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liability-types": {
      "get": {
        "tags": [
          "LiabilityTypes"
        ],
        "summary": "Gets a collection of liability types",
        "operationId": "LiabilityTypes_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiabilityTypesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "LiabilityTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "LiabilityTypes_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liability-types/{id}": {
      "get": {
        "tags": [
          "LiabilityTypes"
        ],
        "summary": "Gets a single liability type by id",
        "description": "Where `id` is the identifier of the liability type",
        "operationId": "LiabilityType_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/LiabilityTypeDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "LiabilityTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "LiabilityType_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liability-types/{id}/relationships/liabilityCategory": {
      "get": {
        "tags": [
          "LiabilityTypes"
        ],
        "summary": "Gets a liabilityCategories related to a single liability type",
        "description": "Where `id` is the identifier of the liability type",
        "operationId": "LiabilityTypeRelationship_Get_LiabilityCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "LiabilityTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "LiabilityTypeRelationship_Get_Head_LiabilityCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-notes/{id}/deal": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Gets deals via a single related deal note",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNoteRelated_Get_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealNoteRelated_Head_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-notes": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Gets a collection of notes on deals",
        "operationId": "DealNotes_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealNotesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealNotes_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Creates a new deal note with attributes, relationships or both",
        "operationId": "DealNote_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DealNoteDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealNoteDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-notes/{id}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Gets a single deal note by id",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNote_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealNoteDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealNote_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Notes"
        ],
        "summary": "Updates the attributes and/or relationships of an existing deal note. Only the values of sent attributes are replaced. And only the values of sent relationships are replaced",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNote_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/DealNoteDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealNoteDocument"
                }
              }
            }
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Notes"
        ],
        "summary": "Deletes an existing deal note",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNote_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-notes/{id}/relationships/deal": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Gets a deals related to a single deal note",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNoteRelationship_Get_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Notes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealNoteRelationship_Get_Head_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Adds deals to a to-many relationship with an existing deal note",
        "description": "Where `id` is the identifier of the primary deal note resource",
        "operationId": "DealNoteRelationship_Post_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Notes"
        ],
        "summary": "Performs a complete replacement of a deal relationship on an existing deal note",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNoteRelationship_Patch_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Notes"
        ],
        "summary": "Removes a deal note from a to-many relationship with deals",
        "description": "Where `id` is the identifier of the deal note",
        "operationId": "DealNoteRelationship_Delete_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/organisations/{id}/addresses": {
      "get": {
        "tags": [
          "Organisations"
        ],
        "summary": "Gets addresses via a single related organisation",
        "description": "Where `id` is the identifier of the organisation",
        "operationId": "OrganisationRelated_Get_OrganisationAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationAddressesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Organisations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "OrganisationRelated_Head_OrganisationAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/organisations": {
      "get": {
        "tags": [
          "Organisations"
        ],
        "summary": "Gets a collection of organisations",
        "operationId": "Organisations_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Organisations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Organisations_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/organisations/{id}": {
      "get": {
        "tags": [
          "Organisations"
        ],
        "summary": "Gets a single organisation by id",
        "description": "Where `id` is the identifier of the organisation",
        "operationId": "Organisation_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Organisations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Organisation_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/organisations/{id}/relationships/addresses": {
      "get": {
        "tags": [
          "Organisations"
        ],
        "summary": "Gets a addresses related to a single organisation",
        "description": "Where `id` is the identifier of the organisation",
        "operationId": "OrganisationRelationship_Get_OrganisationAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Organisations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "OrganisationRelationship_Get_Head_OrganisationAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/property-types": {
      "get": {
        "tags": [
          "PropertyTypes"
        ],
        "summary": "Gets a collection of property types",
        "operationId": "PropertyTypes_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyTypesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "PropertyTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "PropertyTypes_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/property-types/{id}": {
      "get": {
        "tags": [
          "PropertyTypes"
        ],
        "summary": "Gets a single property type by id",
        "description": "Where `id` is the identifier of the property type",
        "operationId": "PropertyType_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyTypeDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "PropertyTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "PropertyType_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/property-types/{id}/{relationshipName}": {
      "get": {
        "tags": [
          "PropertyTypes"
        ],
        "summary": "Gets {{{RelationshipNames}}} via a single related property type",
        "description": "Where `id` is the identifier of the property type",
        "operationId": "PropertyTypeRelated_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "PropertyTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "PropertyTypeRelated_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/property-types/{id}/relationships/{relationshipName}": {
      "get": {
        "tags": [
          "PropertyTypes"
        ],
        "summary": "Gets a {{{RelationshipNames}}} related to a single property type",
        "description": "Where `id` is the identifier of the property type",
        "operationId": "PropertyTypeRelationship_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "PropertyTypes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "PropertyTypeRelationship_Get_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/referrers": {
      "get": {
        "tags": [
          "Referrers"
        ],
        "summary": "Gets a collection of referrers",
        "operationId": "Referrers_Get",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "style": "form",
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": false,
            "allowReserved": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Pagination"
            }
          },
          {
            "name": "include",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferrersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Referrers"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Referrers_Head",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/referrers/{id}": {
      "get": {
        "tags": [
          "Referrers"
        ],
        "summary": "Gets a single referrer by id",
        "description": "Where `id` is the identifier of the referrer",
        "operationId": "Referrer_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferrerDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Referrers"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "Referrer_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/referrers/{id}/{relationshipName}": {
      "get": {
        "tags": [
          "Referrers"
        ],
        "summary": "Gets {{{RelationshipNames}}} via a single related referrer",
        "description": "Where `id` is the identifier of the referrer",
        "operationId": "ReferrerRelated_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Referrers"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ReferrerRelated_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/referrers/{id}/relationships/{relationshipName}": {
      "get": {
        "tags": [
          "Referrers"
        ],
        "summary": "Gets a {{{RelationshipNames}}} related to a single referrer",
        "description": "Where `id` is the identifier of the referrer",
        "operationId": "ReferrerRelationship_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Referrers"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ReferrerRelationship_Get_Head",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationshipName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/structured-leads": {
      "post": {
        "tags": [
          "StructuredLeads"
        ],
        "summary": "Creates a structured lead, including contact and deal attributes",
        "operationId": "StructuredLead_Post",
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/StructuredLeadDocument"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {
              "Location": {
                "description": "Location of newly created resource",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/StructuredLeadDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/structured-leads/{id}": {
      "get": {
        "tags": [
          "StructuredLeads"
        ],
        "summary": "Gets select details of an existing lead",
        "description": "Where `id` is the identifier of the lead",
        "operationId": "StructuredLead_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/StructuredLeadDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/advisers/{id}/contactGroups": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets contactGroups via a single related adviser",
        "description": "Where `id` is the identifier of the adviser",
        "operationId": "AdviserRelated_Get_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactGroupsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Adviser"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserRelated_Head_ContactGroups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/advisers/{id}/adviserDetails": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets adviserDetails via a single related adviser",
        "description": "Where `id` is the identifier of the adviser",
        "operationId": "AdviserRelated_Get_AdviserDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdviserDetailsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Adviser"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserRelated_Head_AdviserDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/advisers/{id}/organisation": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets organisations via a single related adviser",
        "description": "Where `id` is the identifier of the adviser",
        "operationId": "AdviserRelated_Get_Organisations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Adviser"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserRelated_Head_Organisations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/advisers/{id}/agreementHolders": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets agreementHolders via a single related adviser",
        "description": "Where `id` is the identifier of the adviser",
        "operationId": "AdviserRelated_Get_AgreementHolders",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AgreementHoldersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Adviser"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserRelated_Head_AgreementHolders",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/advisers/{id}/addresses": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets addresses via a single related adviser",
        "description": "Where `id` is the identifier of the adviser",
        "operationId": "AdviserRelated_Get_AdviserAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdviserAddressesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Adviser"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserRelated_Head_AdviserAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/advisers/{id}/relationships/adviserDetails": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets a adviserDetails related to a single adviser",
        "description": "Where `id` is the identifier of the adviser",
        "operationId": "AdviserRelationship_Get_AdviserDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Adviser"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserRelationship_Get_Head_AdviserDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/advisers/{id}/relationships/organisation": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets a organisations related to a single adviser",
        "description": "Where `id` is the identifier of the adviser",
        "operationId": "AdviserRelationship_Get_Organisations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Adviser"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserRelationship_Get_Head_Organisations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/advisers/{id}/relationships/agreementHolders": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets a agreementHolders related to a single adviser",
        "description": "Where `id` is the identifier of the adviser",
        "operationId": "AdviserRelationship_Get_AgreementHolders",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Adviser"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserRelationship_Get_Head_AgreementHolders",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/advisers/{id}/relationships/addresses": {
      "get": {
        "tags": [
          "Adviser"
        ],
        "summary": "Gets a addresses related to a single adviser",
        "description": "Where `id` is the identifier of the adviser",
        "operationId": "AdviserRelationship_Get_AdviserAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Adviser"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AdviserRelationship_Get_Head_AdviserAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/assets/{id}/addresses": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Gets addresses via a single related asset",
        "description": "Where `id` is the identifier of the asset",
        "operationId": "AssetRelated_Get_FinancialAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAddressesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetRelated_Head_FinancialAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/assets/{id}/relationships/addresses": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Gets a addresses related to a single asset",
        "description": "Where `id` is the identifier of the asset",
        "operationId": "AssetRelationship_Get_FinancialAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "AssetRelationship_Get_Head_FinancialAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-external-references/{id}/integration": {
      "get": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Gets integrations via a single related contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelated_Get_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactExternalReferenceRelated_Head_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-external-references/{id}/relationships/integration": {
      "get": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Gets a integrations related to a single contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelationship_Get_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactExternalReferenceRelationship_Get_Head_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Adds integrations to a to-many relationship with an existing contact external reference",
        "description": "Where `id` is the identifier of the primary contact external reference resource",
        "operationId": "ContactExternalReferenceRelationship_Post_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Performs a complete replacement of a integration relationship on an existing contact external reference",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelationship_Patch_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactExternalReferences"
        ],
        "summary": "Removes a contact external reference from a to-many relationship with integrations",
        "description": "Where `id` is the identifier of the contact external reference",
        "operationId": "ContactExternalReferenceRelationship_Delete_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/contacts": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets contacts via a single related contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelated_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelated_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/adviser": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets advisers via a single related contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelated_Get_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelated_Head_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/referrerOrganisation": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets referrerOrganisations via a single related contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelated_Get_ReferrerOrganisations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferrerOrganisationsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelated_Head_ReferrerOrganisations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/referrer": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets referrers via a single related contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelated_Get_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferrersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelated_Head_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/relationships/contacts": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets a contacts related to a single contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelationship_Get_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Adds contacts to a to-many relationship with an existing contact group",
        "description": "Where `id` is the identifier of the primary contact group resource",
        "operationId": "ContactGroupRelationship_Post_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Performs a complete replacement of a contacts relationship on an existing contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Patch_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Removes a contact group from a to-many relationship with contacts",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Delete_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/relationships/adviser": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets a advisers related to a single contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Get_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelationship_Get_Head_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Adds advisers to a to-many relationship with an existing contact group",
        "description": "Where `id` is the identifier of the primary contact group resource",
        "operationId": "ContactGroupRelationship_Post_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Performs a complete replacement of a adviser relationship on an existing contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Patch_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Removes a contact group from a to-many relationship with advisers",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Delete_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/relationships/referrerOrganisation": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets a referrerOrganisations related to a single contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Get_ReferrerOrganisations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelationship_Get_Head_ReferrerOrganisations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Adds referrerOrganisations to a to-many relationship with an existing contact group",
        "description": "Where `id` is the identifier of the primary contact group resource",
        "operationId": "ContactGroupRelationship_Post_ReferrerOrganisations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Performs a complete replacement of a referrerOrganisation relationship on an existing contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Patch_ReferrerOrganisations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Removes a contact group from a to-many relationship with referrerOrganisations",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Delete_ReferrerOrganisations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contact-groups/{id}/relationships/referrer": {
      "get": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Gets a referrers related to a single contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Get_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactGroupRelationship_Get_Head_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Adds referrers to a to-many relationship with an existing contact group",
        "description": "Where `id` is the identifier of the primary contact group resource",
        "operationId": "ContactGroupRelationship_Post_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Performs a complete replacement of a referrer relationship on an existing contact group",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Patch_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContactGroups"
        ],
        "summary": "Removes a contact group from a to-many relationship with referrers",
        "description": "Where `id` is the identifier of the contact group",
        "operationId": "ContactGroupRelationship_Delete_Referrers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/ownership": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets ownerships via a single related contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelated_Get_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelated_Head_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/externalReferences": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets externalReferences via a single related contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelated_Get_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactExternalReferencesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelated_Head_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/deals": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets deals via a single related contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelated_Get_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealParticipantsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelated_Head_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/contactAddress": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets contactAddresses via a single related contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelated_Get_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactAddressesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelated_Head_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/relationships/ownership": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets a ownerships related to a single contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Get_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelationship_Get_Head_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Adds ownerships to a to-many relationship with an existing contact",
        "description": "Where `id` is the identifier of the primary contact resource",
        "operationId": "ContactRelationship_Post_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Performs a complete replacement of a ownership relationship on an existing contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Patch_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Removes a contact from a to-many relationship with ownerships",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Delete_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/relationships/externalReferences": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets a externalReferences related to a single contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Get_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelationship_Get_Head_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Adds externalReferences to a to-many relationship with an existing contact",
        "description": "Where `id` is the identifier of the primary contact resource",
        "operationId": "ContactRelationship_Post_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Performs a complete replacement of a externalReferences relationship on an existing contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Patch_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Removes a contact from a to-many relationship with externalReferences",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Delete_ContactExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/relationships/deals": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets a deals related to a single contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Get_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelationship_Get_Head_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Adds deals to a to-many relationship with an existing contact",
        "description": "Where `id` is the identifier of the primary contact resource",
        "operationId": "ContactRelationship_Post_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Performs a complete replacement of a deals relationship on an existing contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Patch_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Removes a contact from a to-many relationship with deals",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Delete_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/contacts/{id}/relationships/contactAddress": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Gets a contactAddresses related to a single contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Get_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "ContactRelationship_Get_Head_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Adds contactAddresses to a to-many relationship with an existing contact",
        "description": "Where `id` is the identifier of the primary contact resource",
        "operationId": "ContactRelationship_Post_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Performs a complete replacement of a contactAddress relationship on an existing contact",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Patch_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Removes a contact from a to-many relationship with contactAddresses",
        "description": "Where `id` is the identifier of the contact",
        "operationId": "ContactRelationship_Delete_ContactAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-external-references/{id}/integration": {
      "get": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Gets integrations via a single related deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelated_Get_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealExternalReferenceRelated_Head_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-external-references/{id}/relationships/integration": {
      "get": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Gets a integrations related to a single deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelationship_Get_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealExternalReferenceRelationship_Get_Head_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Adds integrations to a to-many relationship with an existing deal external reference",
        "description": "Where `id` is the identifier of the primary deal external reference resource",
        "operationId": "DealExternalReferenceRelationship_Post_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Performs a complete replacement of a integration relationship on an existing deal external reference",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelationship_Patch_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsSingleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DealExternalReferences"
        ],
        "summary": "Removes a deal external reference from a to-many relationship with integrations",
        "description": "Where `id` is the identifier of the deal external reference",
        "operationId": "DealExternalReferenceRelationship_Delete_Integrations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-participants/{id}/deal": {
      "get": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Gets deals via a single related participants in a deal",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipantRelated_Get_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealParticipantRelated_Head_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deal-participants/{id}/relationships/deal": {
      "get": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Gets a deals related to a single participants in a deal",
        "description": "Where `id` is the identifier of the participants in a deal",
        "operationId": "DealParticipantRelationship_Get_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "DealParticipants"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealParticipantRelationship_Get_Head_Deals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/importantDates": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets importantDates via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_DealImportantDates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealImportantDatesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_DealImportantDates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/participants": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets participants via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealParticipantsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/externalReferences": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets externalReferences via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealExternalReferencesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/contacts": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets contacts via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/dealStructures": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets dealStructures via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_DealStructures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealStructuresDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_DealStructures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/adviser": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets advisers via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/dealNotes": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets dealNotes via a single related deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelated_Get_DealNotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealNotesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelated_Head_DealNotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/importantDates": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a importantDates related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_DealImportantDates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_DealImportantDates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/participants": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a participants related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_DealParticipants",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/externalReferences": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a externalReferences related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/contacts": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a contacts related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_Contacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/dealStructures": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a dealStructures related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_DealStructures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_DealStructures",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/adviser": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a advisers related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsSingleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_Advisers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/deals/{id}/relationships/dealNotes": {
      "get": {
        "tags": [
          "Deals"
        ],
        "summary": "Gets a dealNotes related to a single deal",
        "description": "Where `id` is the identifier of the deal",
        "operationId": "DealRelationship_Get_DealNotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Deals"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "DealRelationship_Get_Head_DealNotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/incomes/{id}/ownership": {
      "get": {
        "tags": [
          "Incomes"
        ],
        "summary": "Gets ownerships via a single related income",
        "description": "Where `id` is the identifier of the income",
        "operationId": "IncomeRelated_Get_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Incomes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IncomeRelated_Head_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/incomes/{id}/relationships/ownership": {
      "get": {
        "tags": [
          "Incomes"
        ],
        "summary": "Gets a ownerships related to a single income",
        "description": "Where `id` is the identifier of the income",
        "operationId": "IncomeRelationship_Get_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Incomes"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IncomeRelationship_Get_Head_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/integrations/{id}/dealExternalReferences": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Gets dealExternalReferences via a single related integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelated_Get_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/DealExternalReferencesDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Integrations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IntegrationRelated_Head_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/integrations/{id}/relationships/dealExternalReferences": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Gets a dealExternalReferences related to a single integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelationship_Get_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Integrations"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "IntegrationRelationship_Get_Head_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Adds dealExternalReferences to a to-many relationship with an existing integration",
        "description": "Where `id` is the identifier of the primary integration resource",
        "operationId": "IntegrationRelationship_Post_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Integrations"
        ],
        "summary": "Performs a complete replacement of a dealExternalReferences relationship on an existing integration",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelationship_Patch_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Integrations"
        ],
        "summary": "Removes a integration from a to-many relationship with dealExternalReferences",
        "description": "Where `id` is the identifier of the integration",
        "operationId": "IntegrationRelationship_Delete_DealExternalReferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liabilities/{id}/ownership": {
      "get": {
        "tags": [
          "Liabilities"
        ],
        "summary": "Gets ownerships via a single related liabilities",
        "description": "Where `id` is the identifier of the liabilities",
        "operationId": "LiabilityRelated_Get_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnersDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Liabilities"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "LiabilityRelated_Head_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    },
    "/jsonapi/liabilities/{id}/relationships/ownership": {
      "get": {
        "tags": [
          "Liabilities"
        ],
        "summary": "Gets a ownerships related to a single liabilities",
        "description": "Where `id` is the identifier of the liabilities",
        "operationId": "LiabilityRelationship_Get_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipsMultipleDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Liabilities"
        ],
        "summary": "Retrieve headers related to the associated GET request",
        "description": "",
        "operationId": "LiabilityRelationship_Get_Head_Owners",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "default": {
            "description": "Errors - common HTTP status codes will include 400, 403, 404 etc.",
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "addressDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactAddress"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressType": {
        "enum": [
          "CurrentAddress",
          "PostalAddress",
          "PostSettlementAddress",
          "PreviousAddress",
          "Other"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "AddressType",
          "modelAsString": true
        }
      },
      "Adviser": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AdvisersEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AdviserAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/AdviserRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AdviserAddress": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AdviserAddressEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AdviserAddressAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/AdviserAddressRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AdviserAddressAttributes": {
        "type": "object",
        "properties": {
          "isMailing": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "isBusiness": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "formattedAddress": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "streetAddress": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "country": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "suburb": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "postCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdviserAddressDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AdviserAddress"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdviserAddressEntityType": {
        "enum": [
          "adviser-address"
        ],
        "type": "string"
      },
      "AdviserAddressesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdviserAddress"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdviserAddressRelationships": {
        "type": "object",
        "properties": {
          "adviser": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "AdviserAttributes": {
        "type": "object",
        "properties": {
          "googlePlaces": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "myLeadGenActivationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "bio": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "jobTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "website": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isMyLeadGenActive": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "email": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "skype": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "facebook": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "linkedIn": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "twitter": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "youtubeFeatured": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "instagram": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "calendly": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "myLeadGenerator": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "profilePhotoHeadShot": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "readOnly": true
          },
          "profilePhotoHalfBody": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "readOnly": true
          },
          "profilePhotoFullBody": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "readOnly": true
          },
          "countryCode": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryCode"
              }
            ],
            "readOnly": true
          },
          "youtubeChannel": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdviserDetail": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AdviserDetailsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AdviserDetailAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/AdviserDetailRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AdviserDetailAttributes": {
        "type": "object",
        "properties": {
          "gender": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/GenderCode"
              }
            ]
          },
          "placeOfBirth": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "preferredName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "businessPhone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobilePhone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthCountry": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fax": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "workEmail": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        }
      },
      "AdviserDetailDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AdviserDetail"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdviserDetailRelationships": {
        "type": "object",
        "properties": {
          "adviser": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "AdviserDetailsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdviserDetail"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdviserDetailsEntityType": {
        "enum": [
          "adviser-details"
        ],
        "type": "string"
      },
      "AdviserDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Adviser"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdviserRelationships": {
        "type": "object",
        "properties": {
          "adviserDetails": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "organisation": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "agreementHolders": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "addresses": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "contactGroups": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "AdvisersDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Adviser"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AdvisersEntityType": {
        "enum": [
          "advisers"
        ],
        "type": "string"
      },
      "AgreementHolder": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AgreementHoldersEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AgreementHolderAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/AgreementHolderRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AgreementHolderAttributes": {
        "type": "object",
        "properties": {
          "appointmentEntity": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "employmentType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "entityType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AgreementHolderDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AgreementHolder"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AgreementHolderRelationships": {
        "type": "object",
        "properties": {
          "organisation": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "AgreementHoldersDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgreementHolder"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AgreementHoldersEntityType": {
        "enum": [
          "agreement-holders"
        ],
        "type": "string"
      },
      "ApiAddressClientEntity": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "addressDetails": {
            "$ref": "#/components/schemas/ContactAddress"
          }
        },
        "additionalProperties": false
      },
      "ApiAdviserProfile": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "jobTitle": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "bio": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "adviser": {
            "$ref": "#/components/schemas/Adviser"
          }
        },
        "additionalProperties": false
      },
      "ApiClientEntityEmployment": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          }
        },
        "additionalProperties": false
      },
      "ApiFamilySocialMedia": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "linkedInUrl": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "facebookUrl": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "googleMyBusinessUrl": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "youtubeUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "twitterUrl": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Asset": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AssetsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AssetAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/AssetRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AssetAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "accountName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "accountNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "bsb": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "vehicleMake": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "vehicleYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "propertyType": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isRentalIncome": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "isExistingMortgages": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "assetTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "isAccountDetailsKnown": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "institution": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assetSubType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assetSubTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "assetType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assetCategory": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "valuationBasis": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "propertyZoningType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "addressPropertyType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assetCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AssetCategoriesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetCategory"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AssetCategoriesEntityType": {
        "enum": [
          "asset-categories"
        ],
        "type": "string"
      },
      "AssetCategory": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AssetCategoriesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AssetCategoryAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/AssetCategoryRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AssetCategoryAttributes": {
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AssetCategoryDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AssetCategory"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AssetCategoryRelationships": {
        "type": "object"
      },
      "AssetDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Asset"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AssetRelationships": {
        "type": "object",
        "properties": {
          "ownership": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "addresses": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "AssetsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AssetsEntityType": {
        "enum": [
          "assets"
        ],
        "type": "string"
      },
      "AssetSubType": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AssetSubTypesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AssetSubTypeAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/AssetSubTypeRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AssetSubTypeAttributes": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AssetSubTypeDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AssetSubType"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AssetSubTypeRelationships": {
        "type": "object"
      },
      "AssetSubTypesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetSubType"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AssetSubTypesEntityType": {
        "enum": [
          "asset-sub-types"
        ],
        "type": "string"
      },
      "AssetType": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AssetTypesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AssetTypeAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/AssetTypeRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AssetTypeAttributes": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AssetTypeDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/AssetType"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AssetTypeRelationships": {
        "type": "object"
      },
      "AssetTypesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetType"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "AssetTypesEntityType": {
        "enum": [
          "asset-types"
        ],
        "type": "string"
      },
      "Business": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BusinessEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/BusinessAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/BusinessRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BusinessAttributes": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "taxNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "companyNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "abn": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "acn": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "businessType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "BusinessDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Business"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "BusinessEntityType": {
        "enum": [
          "business"
        ],
        "type": "string"
      },
      "BusinessesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Business"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "BusinessRelationships": {
        "type": "object",
        "properties": {
          "contactGroup": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "ownership": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "deals": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "employments": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "ClientAddressType": {
        "enum": [
          "Current",
          "Postal",
          "PostSettlement",
          "Previous",
          "Other"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "ClientAddressType",
          "modelAsString": true
        }
      },
      "Contact": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ContactAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ContactRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ContactAddress": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactAddressEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ContactAddressAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ContactAddressRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ContactAddressAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "addressType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressType"
              }
            ]
          },
          "formattedAddress": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "streetAddress": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "country": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "suburb": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "postCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactAddressDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ContactAddress"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactAddressEntityType": {
        "enum": [
          "contact-address"
        ],
        "type": "string"
      },
      "ContactAddressesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactAddress"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactAddressRelationships": {
        "type": "object",
        "properties": {
          "contactAddress": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "ContactAttributes": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "mobile": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "preferredName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "businessPhone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "secondaryEmail": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/GenderCode"
              }
            ]
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "hasMarketingConsent": {
            "type": "boolean",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean",
            "nullable": true
          },
          "role": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactRole"
              }
            ],
            "readOnly": true
          }
        }
      },
      "ContactDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Contact"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactExternalReference": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactExternalReferencesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ContactExternalReferenceAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ContactExternalReferenceRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ContactExternalReferenceAttributes": {
        "type": "object",
        "properties": {
          "externalReference": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ContactExternalReferenceDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ContactExternalReference"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactExternalReferenceRelationships": {
        "type": "object",
        "properties": {
          "integration": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "contact": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "ContactExternalReferencesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactExternalReference"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactExternalReferencesEntityType": {
        "enum": [
          "contact-external-references"
        ],
        "type": "string"
      },
      "ContactGroup": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactGroupsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ContactGroupAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ContactGroupRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ContactGroupAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "utmSource": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "utmMedium": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "utmTerm": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "utmContent": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "utmCampaign": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "contactType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactType"
              }
            ]
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "enquirySourceCategory": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "enquirySource": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactGroupDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ContactGroup"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactGroupRelationships": {
        "type": "object",
        "properties": {
          "businesses": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "contacts": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "adviser": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "referrerOrganisation": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "referrer": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "ContactGroupsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactGroup"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactGroupsEntityType": {
        "enum": [
          "contact-groups"
        ],
        "type": "string"
      },
      "ContactMarketing": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ContactMarketingEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ContactMarketingAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ContactMarketingRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ContactMarketingAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "hasMarketingConsent": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ContactMarketingDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ContactMarketing"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactMarketingEntityType": {
        "enum": [
          "contact-marketing"
        ],
        "type": "string"
      },
      "ContactMarketingRelationships": {
        "type": "object"
      },
      "ContactMarketingsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactMarketing"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactRelationships": {
        "type": "object",
        "properties": {
          "contactGroup": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "ownership": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "externalReferences": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "deals": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "employments": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "contactAddress": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "ContactRole": {
        "enum": [
          "Adult",
          "Child",
          "Other"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "ContactRole",
          "modelAsString": true
        }
      },
      "ContactsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ContactsEntityType": {
        "enum": [
          "contacts"
        ],
        "type": "string"
      },
      "ContactType": {
        "enum": [
          "Lead",
          "Application",
          "ExistingClient",
          "ProfessionalPartner",
          "PreviousClient",
          "Opportunity",
          "NewClient"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "ContactType",
          "modelAsString": true
        }
      },
      "CountryCode": {
        "enum": [
          "NZ",
          "AU",
          "ID"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "CountryCode",
          "modelAsString": true
        }
      },
      "Deal": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "dates": {
            "$ref": "#/components/schemas/ImportantDatesSet"
          },
          "totalLoanAmount": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "customStatusName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "dealType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/DealType"
              }
            ]
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "dealStatus": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemStatus"
              }
            ],
            "readOnly": true
          },
          "opportunity": {
            "$ref": "#/components/schemas/Opportunity"
          },
          "splits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Split"
            },
            "nullable": true,
            "readOnly": true
          },
          "lenderName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Deal"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealExternalReference": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealExternalReferencesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealExternalReferenceAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealExternalReferenceRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealExternalReferenceAttributes": {
        "type": "object",
        "properties": {
          "externalReference": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "DealExternalReferenceDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealExternalReference"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealExternalReferenceRelationships": {
        "type": "object",
        "properties": {
          "integration": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "deal": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealExternalReferencesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealExternalReference"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealExternalReferencesEntityType": {
        "enum": [
          "deal-external-references"
        ],
        "type": "string"
      },
      "DealImportantDate": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealImportantDatesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealImportantDateAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealImportantDateRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealImportantDateAttributes": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "readOnly": true
          },
          "dateType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImportantDate"
              }
            ],
            "readOnly": true
          }
        }
      },
      "DealImportantDateDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealImportantDate"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealImportantDateRelationships": {
        "type": "object",
        "properties": {
          "deal": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealImportantDatesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealImportantDate"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealImportantDatesEntityType": {
        "enum": [
          "deal-important-dates"
        ],
        "type": "string"
      },
      "DealNote": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealNotesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealNoteAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealNoteRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealNoteAttributes": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DealNoteDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealNote"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealNoteRelationships": {
        "type": "object",
        "properties": {
          "deal": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealNotesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealNote"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealNotesEntityType": {
        "enum": [
          "deal-notes"
        ],
        "type": "string"
      },
      "DealParticipant": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealParticipantsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealParticipantAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealParticipantRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealParticipantAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "isApplicant": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "isDependent": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "isGuarantor": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealParticipantDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealParticipant"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealParticipantRelationships": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "deal": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealParticipantsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealParticipant"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealParticipantsEntityType": {
        "enum": [
          "deal-participants"
        ],
        "type": "string"
      },
      "DealRelationships": {
        "type": "object",
        "properties": {
          "dealScenario": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "importantDates": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "participants": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "externalReferences": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "dealStructures": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "contacts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationshipsMultipleDocument"
              }
            ],
            "writeOnly": true
          },
          "adviser": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "dealNotes": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "DealScenario": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealScenarioEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealScenarioAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealScenarioRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealScenarioAttributes": {
        "type": "object"
      },
      "DealScenarioDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealScenario"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealScenarioEntityType": {
        "enum": [
          "deal-scenario"
        ],
        "type": "string"
      },
      "DealScenarioRelationships": {
        "type": "object",
        "properties": {
          "highLevelSummary": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "deal": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealScenariosDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealScenario"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Deal"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealsEntityType": {
        "enum": [
          "deals"
        ],
        "type": "string"
      },
      "DealStructure": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealStructuresEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealStructureAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealStructureRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealStructureAttributes": {
        "type": "object",
        "properties": {
          "fixedRateBeginDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "readOnly": true
          },
          "rateTypePeriodMonths": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "loanStructureType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/LoanStructureType"
              }
            ]
          },
          "interestRate": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "rateType": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "paymentAmount": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "interestOnlyExpiryDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "readOnly": true
          },
          "loanTermYears": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "fixedRateExpiryDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealStructureDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealStructure"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealStructureImportantDate": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DealStructureImportantDatesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/DealStructureImportantDateAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/DealStructureImportantDateRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DealStructureImportantDateAttributes": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "readOnly": true
          },
          "dateType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/LoanStructureImportantDateTypes"
              }
            ],
            "readOnly": true
          },
          "finishDate": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealStructureImportantDateDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/DealStructureImportantDate"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealStructureImportantDateRelationships": {
        "type": "object",
        "properties": {
          "dealStructure": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealStructureImportantDatesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealStructureImportantDate"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealStructureImportantDatesEntityType": {
        "enum": [
          "deal-structure-important-dates"
        ],
        "type": "string"
      },
      "DealStructureRelationships": {
        "type": "object",
        "properties": {
          "dealImportantDates": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "deal": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "DealStructuresDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealStructure"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "DealStructuresEntityType": {
        "enum": [
          "deal-structures"
        ],
        "type": "string"
      },
      "DealType": {
        "enum": [
          "Residential",
          "Commercial",
          "SmallBusiness",
          "AssetFinance",
          "PersonalLoan",
          "DepositBond"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "DealType",
          "modelAsString": true
        }
      },
      "EmployerType": {
        "enum": [
          "Private",
          "Public"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "EmployerType",
          "modelAsString": true
        }
      },
      "EmploymentBasis": {
        "enum": [
          "FullTime",
          "PartTime",
          "Contract",
          "Temporary",
          "Casual"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "EmploymentBasis",
          "modelAsString": true
        }
      },
      "EmploymentStatus": {
        "enum": [
          "PrimaryEmployment",
          "SecondaryEmployment",
          "PreviousEmployment"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "EmploymentStatus",
          "modelAsString": true
        }
      },
      "EmploymentType": {
        "enum": [
          "PAYG",
          "SelfEmployed",
          "Unemployed",
          "Retired",
          "HomeDuties",
          "Student"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "EmploymentType",
          "modelAsString": true
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "$ref": "#/components/schemas/ErrorLinks"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/ErrorSource"
          },
          "meta": {
            "$ref": "#/components/schemas/ErrorMeta"
          }
        },
        "additionalProperties": false
      },
      "ErrorDocument": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorLinks": {
        "type": "object",
        "properties": {
          "about": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorMeta": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ErrorSource": {
        "type": "object",
        "properties": {
          "pointer": {
            "type": "string",
            "nullable": true
          },
          "parameter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Expense": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ExpensesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExpenseAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ExpenseRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "expenseTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "frequency": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "expenseCategory": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "expenseType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "expenseCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ExpenseCategoriesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseCategory"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ExpenseCategoriesEntityType": {
        "enum": [
          "expense-categories"
        ],
        "type": "string"
      },
      "ExpenseCategory": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ExpenseCategoriesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExpenseCategoryAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ExpenseCategoryRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseCategoryAttributes": {
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ExpenseCategoryDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ExpenseCategory"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ExpenseCategoryRelationships": {
        "type": "object",
        "properties": {
          "expenseTypes": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "ExpenseDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Expense"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ExpenseRelationships": {
        "type": "object",
        "properties": {
          "ownership": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "ExpensesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Expense"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ExpensesEntityType": {
        "enum": [
          "expenses"
        ],
        "type": "string"
      },
      "ExpenseType": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ExpenseTypesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExpenseTypeAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ExpenseTypeRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ExpenseTypeAttributes": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ExpenseTypeDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ExpenseType"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ExpenseTypeRelationships": {
        "type": "object",
        "properties": {
          "expenseCategory": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "ExpenseTypesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseType"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ExpenseTypesEntityType": {
        "enum": [
          "expense-types"
        ],
        "type": "string"
      },
      "Financial": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FinancialsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/FinancialAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/FinancialRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FinancialAddress": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FinancialAddressEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/FinancialAddressAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/FinancialAddressRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FinancialAddressAttributes": {
        "type": "object",
        "properties": {
          "formattedAddress": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "streetAddress": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "country": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "suburb": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "postCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "FinancialAddressDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/FinancialAddress"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "FinancialAddressEntityType": {
        "enum": [
          "financial-address"
        ],
        "type": "string"
      },
      "FinancialAddressesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialAddress"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "FinancialAddressRelationships": {
        "type": "object"
      },
      "FinancialAttributes": {
        "type": "object"
      },
      "FinancialDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Financial"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "FinancialRelationships": {
        "type": "object",
        "properties": {
          "expenses": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "addresses": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "clients": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "incomes": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "liabilities": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "assets": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "FinancialsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Financial"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "FinancialsEntityType": {
        "enum": [
          "financials"
        ],
        "type": "string"
      },
      "Frequency": {
        "enum": [
          "Yearly",
          "HalfYearly",
          "Quarterly",
          "Monthly",
          "Fortnightly",
          "Weekly",
          "HalfMonthly"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "Frequency",
          "modelAsString": true
        }
      },
      "Gender": {
        "enum": [
          "Male",
          "Female",
          "Undisclosed"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "Gender",
          "modelAsString": true
        }
      },
      "GenderCode": {
        "enum": [
          "Male",
          "Female",
          "Undisclosed"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "GenderCode",
          "modelAsString": true
        }
      },
      "HighLevelSummariesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighLevelSummary"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "HighLevelSummary": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/HighLevelSummaryEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/HighLevelSummaryAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/HighLevelSummaryRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HighLevelSummaryAttributes": {
        "type": "object",
        "properties": {
          "proposedLoanAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "securityAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "summaryNotes": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "loanPurpose": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "HighLevelSummaryDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/HighLevelSummary"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "HighLevelSummaryEntityType": {
        "enum": [
          "high-level-summary"
        ],
        "type": "string"
      },
      "HighLevelSummaryRelationships": {
        "type": "object",
        "properties": {
          "dealScenario": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "ImportantDate": {
        "enum": [
          "Settled",
          "FinanceClause",
          "NotProceeding",
          "Lodged",
          "PreApproved",
          "ConditionallyApproved",
          "Approved",
          "PreApprovedExpiry",
          "EstimatedSettled"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "ImportantDate",
          "modelAsString": true
        }
      },
      "ImportantDatesSet": {
        "type": "object",
        "properties": {
          "settled": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "lodged": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "financeClause": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "notProceeding": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "approved": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "preApproved": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "conditionallyApproved": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "preApprovedExpiry": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "estimatedSettled": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IncludedResource": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "contact-address": "#/components/schemas/ContactAddress",
            "organisation-addresses": "#/components/schemas/OrganisationAddress",
            "adviser-details": "#/components/schemas/AdviserDetail",
            "high-level-summary": "#/components/schemas/HighLevelSummary",
            "deal-scenario": "#/components/schemas/DealScenario",
            "asset-categories": "#/components/schemas/AssetCategory",
            "asset-types": "#/components/schemas/AssetType",
            "asset-sub-types": "#/components/schemas/AssetSubType",
            "expense-categories": "#/components/schemas/ExpenseCategory",
            "expense-types": "#/components/schemas/ExpenseType",
            "liability-categories": "#/components/schemas/LiabilityCategory",
            "liability-types": "#/components/schemas/LiabilityType",
            "liabilities": "#/components/schemas/Liability",
            "income-categories": "#/components/schemas/IncomeCategory",
            "income-types": "#/components/schemas/IncomeType",
            "incomes": "#/components/schemas/Income",
            "deal-structure-important-dates": "#/components/schemas/DealStructureImportantDate",
            "deal-structures": "#/components/schemas/DealStructure",
            "expenses": "#/components/schemas/Expense",
            "property-types": "#/components/schemas/PropertyType",
            "financial-address": "#/components/schemas/FinancialAddress",
            "assets": "#/components/schemas/Asset",
            "financials": "#/components/schemas/Financial",
            "owners": "#/components/schemas/Owner",
            "deal-participants": "#/components/schemas/DealParticipant",
            "business": "#/components/schemas/Business",
            "deal-important-dates": "#/components/schemas/DealImportantDate",
            "integrations": "#/components/schemas/Integration",
            "deal-external-references": "#/components/schemas/DealExternalReference",
            "deal-notes": "#/components/schemas/DealNote",
            "deals": "#/components/schemas/Deal",
            "agreement-holders": "#/components/schemas/AgreementHolder",
            "advisers": "#/components/schemas/Adviser",
            "adviser-address": "#/components/schemas/AdviserAddress",
            "organisations": "#/components/schemas/Organisation",
            "referrer-organisation": "#/components/schemas/ReferrerOrganisation",
            "referrer": "#/components/schemas/Referrer",
            "contact-groups": "#/components/schemas/ContactGroup",
            "contacts": "#/components/schemas/Contact",
            "contact-external-references": "#/components/schemas/ContactExternalReference",
            "contact-marketing": "#/components/schemas/ContactMarketing",
            "leads": "#/components/schemas/Lead",
            "structured-leads": "#/components/schemas/StructuredLead"
          }
        }
      },
      "Income": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/IncomesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/IncomeAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/IncomeRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IncomeAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "incomeTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "frequency": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "incomeCategory": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "incomeType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "incomeCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "IncomeCategoriesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncomeCategory"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "IncomeCategoriesEntityType": {
        "enum": [
          "income-categories"
        ],
        "type": "string"
      },
      "IncomeCategory": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/IncomeCategoriesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/IncomeCategoryAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/IncomeCategoryRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IncomeCategoryAttributes": {
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "IncomeCategoryDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/IncomeCategory"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "IncomeCategoryRelationships": {
        "type": "object",
        "properties": {
          "incomeTypes": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "IncomeDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Income"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "IncomeRelationships": {
        "type": "object",
        "properties": {
          "linkedAsset": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "ownership": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "IncomesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Income"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "IncomesEntityType": {
        "enum": [
          "incomes"
        ],
        "type": "string"
      },
      "IncomeType": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/IncomeTypesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/IncomeTypeAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/IncomeTypeRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IncomeTypeAttributes": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "IncomeTypeDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/IncomeType"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "IncomeTypeRelationships": {
        "type": "object",
        "properties": {
          "incomeCategory": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "IncomeTypesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncomeType"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "IncomeTypesEntityType": {
        "enum": [
          "income-types"
        ],
        "type": "string"
      },
      "IncomeVerificationEnum": {
        "enum": [
          "CurrentPayslips",
          "CurrentGroupCertificate",
          "CurrentPersonalTaxReturn",
          "PreviousYearPersonalTaxReturn",
          "NoticeOfAssessment",
          "CurrentCompanyTaxReturn",
          "PreviousCompanyTaxReturn",
          "LetterFromEmployer",
          "EmploymentContract",
          "BankAccountStatement",
          "Other"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "IncomeVerificationEnum",
          "modelAsString": true
        }
      },
      "Integration": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/IntegrationsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/IntegrationAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/IntegrationRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IntegrationAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        }
      },
      "IntegrationDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Integration"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "IntegrationRelationships": {
        "type": "object",
        "properties": {
          "contactExternalReferences": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "dealExternalReferences": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "IntegrationsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "IntegrationsEntityType": {
        "enum": [
          "integrations"
        ],
        "type": "string"
      },
      "Lead": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/LeadsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/LeadAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/LeadRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LeadAddress": {
        "type": "object",
        "properties": {
          "lid": {
            "type": "string",
            "nullable": true
          },
          "formattedAddress": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "streetAddress": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "suburb": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "state": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "maxLength": 4,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "$ref": "#/components/schemas/ClientAddressType"
          }
        },
        "additionalProperties": false
      },
      "LeadAsset": {
        "type": "object",
        "properties": {
          "lid": {
            "type": "string",
            "nullable": true
          },
          "assetTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assetSubTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "institution": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "accountName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "bsb": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "vehicleMake": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "vehicleYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "propertyZoningId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "propertyTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "propertyPrimaryPurpose": {
            "$ref": "#/components/schemas/PropertyPrimaryPurpose"
          },
          "valueBasis": {
            "$ref": "#/components/schemas/PropertyValueEstimatedBasis"
          },
          "address": {
            "$ref": "#/components/schemas/LeadAddress"
          },
          "ownership": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadContact"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeadAttributes": {
        "type": "object",
        "properties": {
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "writeOnly": true
          },
          "title": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/Title"
              }
            ],
            "writeOnly": true
          },
          "firstName": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "preferredName": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "lastName": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "email": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "mobile": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "gender": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ],
            "writeOnly": true
          },
          "hasMarketingConsent": {
            "type": "boolean",
            "nullable": true,
            "writeOnly": true
          },
          "isGuarantor": {
            "type": "boolean",
            "nullable": true,
            "writeOnly": true
          },
          "isDependant": {
            "type": "boolean",
            "nullable": true,
            "writeOnly": true
          },
          "isPrimary": {
            "type": "boolean",
            "nullable": true,
            "writeOnly": true
          },
          "streetAddress": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "suburb": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "state": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "postCode": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "country": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "addressType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/ClientAddressType"
              }
            ],
            "writeOnly": true
          },
          "noteTitle": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "noteDetails": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmSource": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmMedium": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmCampaign": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmTerm": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmContent": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "sourceSystemUrl": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "sourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "writeOnly": true
          },
          "sourceCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "writeOnly": true
          },
          "customStatusName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "dealStatus": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemStatus"
              }
            ],
            "readOnly": true
          }
        }
      },
      "LeadContact": {
        "type": "object",
        "properties": {
          "lid": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "$ref": "#/components/schemas/Title"
          },
          "firstName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "preferredName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "homePhone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "businessPhone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "dateOfBirthAsString": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "hasMarketingConsent": {
            "type": "boolean",
            "nullable": true
          },
          "isGuarantor": {
            "type": "boolean",
            "nullable": true
          },
          "isDependant": {
            "type": "boolean",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadAddress"
            },
            "nullable": true
          },
          "employments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadEmployment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeadDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Lead"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "LeadEmployment": {
        "type": "object",
        "properties": {
          "lid": {
            "type": "string",
            "nullable": true
          },
          "employmentStatus": {
            "$ref": "#/components/schemas/EmploymentStatus"
          },
          "employmentType": {
            "$ref": "#/components/schemas/EmploymentType"
          },
          "dateStartedAsString": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "dateStarted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateEndedAsString": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "dateEnded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employmentRoleName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "employmentBasis": {
            "$ref": "#/components/schemas/EmploymentBasis"
          },
          "isProbation": {
            "type": "boolean",
            "nullable": true
          },
          "businessNumber": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "companyNumber": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "employerName": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "employerContactTitle": {
            "$ref": "#/components/schemas/Title"
          },
          "employerContactFirstName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "employerContactLastName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "employerType": {
            "$ref": "#/components/schemas/EmployerType"
          },
          "employerPhone": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/LeadAddress"
          }
        },
        "additionalProperties": false
      },
      "LeadExpense": {
        "type": "object",
        "properties": {
          "lid": {
            "type": "string",
            "nullable": true
          },
          "expenseTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "frequency": {
            "$ref": "#/components/schemas/Frequency"
          },
          "ownership": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadContact"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeadIncome": {
        "type": "object",
        "properties": {
          "lid": {
            "type": "string",
            "nullable": true
          },
          "incomeTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "frequency": {
            "$ref": "#/components/schemas/Frequency"
          },
          "incomeVerification": {
            "$ref": "#/components/schemas/IncomeVerificationEnum"
          },
          "ownership": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadContact"
            },
            "nullable": true
          },
          "asset": {
            "$ref": "#/components/schemas/LeadAsset"
          },
          "employment": {
            "$ref": "#/components/schemas/LeadEmployment"
          }
        },
        "additionalProperties": false
      },
      "LeadLiability": {
        "type": "object",
        "properties": {
          "lid": {
            "type": "string",
            "nullable": true
          },
          "liabilityTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "accountName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "bsb": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "limit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "repayments": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "repaymentFrequency": {
            "$ref": "#/components/schemas/Frequency"
          },
          "interestRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "interestTaxDeductible": {
            "type": "boolean",
            "nullable": true
          },
          "creditorName": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "loanTerm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "loanRepaymentType": {
            "$ref": "#/components/schemas/LiabilityRepaymentType"
          },
          "mortgagePriority": {
            "$ref": "#/components/schemas/MortgagePriority"
          },
          "asset": {
            "$ref": "#/components/schemas/LeadAsset"
          },
          "ownership": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadContact"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeadRelationships": {
        "type": "object"
      },
      "LeadsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Lead"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "LeadsEntityType": {
        "enum": [
          "leads"
        ],
        "type": "string"
      },
      "LiabilitiesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Liability"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "LiabilitiesEntityType": {
        "enum": [
          "liabilities"
        ],
        "type": "string"
      },
      "Liability": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/LiabilitiesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/LiabilityAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/LiabilityRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LiabilityAttributes": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "repayment": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "limit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "accountName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "bsb": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "interestTaxDeductible": {
            "type": "boolean",
            "nullable": true
          },
          "interestRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isAccountDetailsKnown": {
            "type": "boolean",
            "nullable": true
          },
          "liabilityTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "loanTerm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "repaymentFrequency": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "liabilityCategory": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "liabilityCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "liabilityType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mortgagePriority": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "creditorName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "loanRepaymentType": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/LiabilityRepaymentType"
              }
            ],
            "readOnly": true
          }
        }
      },
      "LiabilityCategoriesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiabilityCategory"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "LiabilityCategoriesEntityType": {
        "enum": [
          "liability-categories"
        ],
        "type": "string"
      },
      "LiabilityCategory": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/LiabilityCategoriesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/LiabilityCategoryAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/LiabilityCategoryRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LiabilityCategoryAttributes": {
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "LiabilityCategoryDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/LiabilityCategory"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "LiabilityCategoryRelationships": {
        "type": "object",
        "properties": {
          "liabilityTypes": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "LiabilityDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Liability"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "LiabilityRelationships": {
        "type": "object",
        "properties": {
          "linkedAsset": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "ownership": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "LiabilityRepaymentType": {
        "enum": [
          "InterestOnly",
          "PrincipalInterest"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "LiabilityRepaymentType",
          "modelAsString": true
        }
      },
      "LiabilityType": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/LiabilityTypesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/LiabilityTypeAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/LiabilityTypeRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LiabilityTypeAttributes": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "LiabilityTypeDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/LiabilityType"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "LiabilityTypeRelationships": {
        "type": "object",
        "properties": {
          "liabilityCategory": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "LiabilityTypesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiabilityType"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "LiabilityTypesEntityType": {
        "enum": [
          "liability-types"
        ],
        "type": "string"
      },
      "LoanStructureImportantDateTypes": {
        "enum": [
          "InterestOnly",
          "RepaymentHoliday"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "LoanStructureImportantDateTypes",
          "modelAsString": true
        }
      },
      "LoanStructureType": {
        "enum": [
          "PrincipalInterest",
          "InterestOnly",
          "RevolvingCredit",
          "Offset"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "LoanStructureType",
          "modelAsString": true
        }
      },
      "MortgagePriority": {
        "enum": [
          "First",
          "Second",
          "Third"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "MortgagePriority",
          "modelAsString": true
        }
      },
      "Opportunity": {
        "type": "object",
        "properties": {
          "proposedLoanAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "securityAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "summaryNotes": {
            "type": "string",
            "nullable": true
          },
          "loanPurpose": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Organisation": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/OrganisationsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/OrganisationAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/OrganisationRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationAddress": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/OrganisationAddressesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/OrganisationAddressAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/OrganisationAddressRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "OrganisationAddressAttributes": {
        "type": "object",
        "properties": {
          "isMailing": {
            "type": "boolean",
            "nullable": true
          },
          "isCustomAddress": {
            "type": "boolean",
            "nullable": true
          },
          "formattedAddress": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "streetAddress": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "country": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "suburb": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "postCode": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OrganisationAddressDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/OrganisationAddress"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OrganisationAddressesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganisationAddress"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OrganisationAddressesEntityType": {
        "enum": [
          "organisation-addresses"
        ],
        "type": "string"
      },
      "OrganisationAddressRelationships": {
        "type": "object"
      },
      "OrganisationAttributes": {
        "type": "object",
        "properties": {
          "emailForCommissions": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "primaryBrandColour": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "tradingName": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "website": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "companyEmail": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "brandedCategory": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "businessNumber": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "companyNumber": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "officeDisplayName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fax": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "brandLogoUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OrganisationDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Organisation"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OrganisationRelationships": {
        "type": "object",
        "properties": {
          "advisers": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          },
          "addresses": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "OrganisationsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organisation"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OrganisationsEntityType": {
        "enum": [
          "organisations"
        ],
        "type": "string"
      },
      "Owner": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/OwnersEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/OwnerAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/OwnerRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "OwnerAttributes": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "ownershipPercentage": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OwnerDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Owner"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OwnerRelationships": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "business": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "asset": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "expense": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "liability": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          },
          "income": {
            "$ref": "#/components/schemas/RelationshipsSingleDocument"
          }
        }
      },
      "OwnersDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Owner"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "OwnersEntityType": {
        "enum": [
          "owners"
        ],
        "type": "string"
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PropertyPrimaryPurpose": {
        "enum": [
          "PurchaseOwnerOccupied",
          "PurchaseInvestment"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "PropertyPrimaryPurpose",
          "modelAsString": true
        }
      },
      "PropertyType": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PropertyTypesEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/PropertyTypeAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/PropertyTypeRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PropertyTypeAttributes": {
        "type": "object",
        "properties": {
          "propertyZoningType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "propertyZoningTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "PropertyTypeDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/PropertyType"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "PropertyTypeRelationships": {
        "type": "object"
      },
      "PropertyTypesDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyType"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "PropertyTypesEntityType": {
        "enum": [
          "property-types"
        ],
        "type": "string"
      },
      "PropertyValueEstimatedBasis": {
        "enum": [
          "ApplicantEstimate",
          "CertifiedValuation",
          "ActualValue"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "PropertyValueEstimatedBasis",
          "modelAsString": true
        }
      },
      "PropertyZoningTypesEntityType": {
        "enum": [
          "property-zoning-types"
        ],
        "type": "string"
      },
      "Referrer": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ReferrerEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ReferrerAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ReferrerRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ReferrerAttributes": {
        "type": "object",
        "properties": {
          "referrerName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        }
      },
      "ReferrerDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/Referrer"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ReferrerEntityType": {
        "enum": [
          "referrer"
        ],
        "type": "string"
      },
      "ReferrerOrganisation": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ReferrerOrganisationEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ReferrerOrganisationAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/ReferrerOrganisationRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ReferrerOrganisationAttributes": {
        "type": "object",
        "properties": {
          "referrerOrgName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        }
      },
      "ReferrerOrganisationDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ReferrerOrganisation"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ReferrerOrganisationEntityType": {
        "enum": [
          "referrer-organisation"
        ],
        "type": "string"
      },
      "ReferrerOrganisationRelationships": {
        "type": "object",
        "properties": {
          "contactGroups": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "ReferrerOrganisationsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferrerOrganisation"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ReferrerRelationships": {
        "type": "object",
        "properties": {
          "contactGroups": {
            "$ref": "#/components/schemas/RelationshipsMultipleDocument"
          }
        }
      },
      "ReferrersDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Referrer"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "RelationshipLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "nullable": true
          },
          "related": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipsMultipleDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationshipLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceIdentifier"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelationshipsSingleDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelationshipLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/ResourceIdentifier"
          }
        },
        "additionalProperties": false
      },
      "ResourceIdentifier": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ResourceLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Split": {
        "type": "object",
        "properties": {
          "loanTermYears": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rateType": {
            "type": "string",
            "nullable": true
          },
          "loanStructureType": {
            "$ref": "#/components/schemas/LoanStructureType"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "interestRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rateTypePeriodMonths": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "fixedRateStartDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "fixedRateEndDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "interestOnlyStartDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "interestOnlyEndDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "repaymentHolidayStartDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "repaymentHolidayEndDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StructuredLead": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IncludedResource"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StructuredLeadsEntityType"
          },
          "id": {
            "pattern": "^[1-9]\\d*$",
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/StructuredLeadAttributes"
          },
          "relationships": {
            "$ref": "#/components/schemas/StructuredLeadRelationships"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceLinks"
              }
            ],
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StructuredLeadAttributes": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadContact"
            },
            "nullable": true,
            "writeOnly": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadAddress"
            },
            "nullable": true,
            "writeOnly": true
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadAsset"
            },
            "nullable": true,
            "writeOnly": true
          },
          "expenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadExpense"
            },
            "nullable": true,
            "writeOnly": true
          },
          "incomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadIncome"
            },
            "nullable": true,
            "writeOnly": true
          },
          "liabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadLiability"
            },
            "nullable": true,
            "writeOnly": true
          },
          "employments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadEmployment"
            },
            "nullable": true,
            "writeOnly": true
          },
          "utmSource": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmMedium": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmCampaign": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmTerm": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "utmContent": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "sourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "writeOnly": true
          },
          "sourceCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "writeOnly": true
          },
          "sourceSystemUrl": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "noteTitle": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "noteDetails": {
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "customStatusName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "dealStatus": {
            "type": "string",
            "allOf": [
              {
                "$ref": "#/components/schemas/SystemStatus"
              }
            ],
            "readOnly": true
          }
        }
      },
      "StructuredLeadDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "$ref": "#/components/schemas/StructuredLead"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "StructuredLeadRelationships": {
        "type": "object"
      },
      "StructuredLeadsDocument": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "jsonApi": {
            "type": "object",
            "additionalProperties": { },
            "readOnly": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TopLevelLinks"
              }
            ],
            "readOnly": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StructuredLead"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedResource"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "StructuredLeadsEntityType": {
        "enum": [
          "structured-leads"
        ],
        "type": "string"
      },
      "SystemStatus": {
        "enum": [
          "NewLeads",
          "Researching",
          "PreApproved",
          "ConditionallyApproved",
          "UnconditionallyApproved",
          "Lodged",
          "InProgress",
          "PendingSettlement",
          "Varied",
          "Repaid",
          "Withdrawn",
          "Cancelled",
          "Settled"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "SystemStatus",
          "modelAsString": true
        }
      },
      "Title": {
        "enum": [
          "Mr",
          "Mrs",
          "Ms",
          "Miss",
          "Master",
          "Dr"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "Title",
          "modelAsString": true
        }
      },
      "TopLevelLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "nullable": true
          },
          "related": {
            "type": "string",
            "nullable": true
          },
          "describedBy": {
            "type": "string",
            "nullable": true
          },
          "first": {
            "type": "string",
            "nullable": true
          },
          "last": {
            "type": "string",
            "nullable": true
          },
          "prev": {
            "type": "string",
            "nullable": true
          },
          "next": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkbenchLogType": {
        "enum": [
          "Email",
          "Mail",
          "Notes",
          "RequirementAdd",
          "RequirementCompleted",
          "RequirementUnticked",
          "RequirementUpdated",
          "RequirementDeleted",
          "NextWorkDate"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "WorkbenchLogType",
          "modelAsString": true
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT authorization header using the Bearer scheme.",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}